var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AboutMeComponent.html",[0,0.687,1,1.062]],["body/components/AboutMeComponent.html",[0,1.1,1,1.602,2,0.295,3,0.334,4,1.337,5,1.337,6,1.337,7,1.337,8,0.259,9,3.99,10,2.925,11,2.139,12,1.475,13,2.801,14,1.112,15,2.915,16,2.915,17,1.936,18,4.369,19,1.936,20,3.717,21,0.416,22,0.961,23,1.628,24,4.79,25,1.353,26,2.276,27,3.07,28,0.858,29,2.383,30,2.296,31,3.145,32,2.847,33,2.071,34,2.075,35,1.13,36,3.717,37,0.664,38,0.033,39,0.946,40,0.483,41,0.556,42,2.567,43,1.541,44,1.035,45,0.858,46,1.762,47,0.789,48,1.936,49,1.936,50,0.823,51,0.608,52,1.337,53,1.217,54,1.112,55,1.646,56,2.139,57,2.139,58,0.295,59,0.224,60,1.217,61,1.856,62,2.139,63,3.717,64,2.139,65,0.789,66,2.139,67,2.139,68,1.646,69,2.139,70,2.139,71,2.139,72,2.139,73,1.337,74,2.139,75,1.646,76,1.217,77,1.646,78,2.567,79,1.337,80,2.567,81,1.856,82,2.688,83,1.856,84,2.567,85,1.112,86,1.762,87,1.936,88,1.936,89,2.495,90,1.337,91,1.337,92,0.935,93,1.337,94,0.858,95,1.337,96,0.858,97,1.112,98,1.337,99,0.858,100,1.337,101,0.935,102,1.112,103,0.46,104,1.337,105,0.019,106,0.019]],["title/injectables/AboutMeService.html",[32,1.654,107,1.375]],["body/injectables/AboutMeService.html",[2,0.382,3,0.431,8,0.335,10,3.081,21,0.537,22,1.15,23,1.54,25,1.619,26,2.611,28,1.11,32,2.315,35,1.297,37,0.858,38,0.033,39,0.718,40,0.578,41,0.718,43,1.575,44,0.786,45,1.791,46,2.108,47,1.019,48,2.315,49,2.789,50,0.811,51,0.786,58,0.382,59,0.29,60,2.377,79,1.728,97,1.926,105,0.023,106,0.023,107,2.172,108,4.461,109,2.764,110,5.355,111,5.355,112,2.399,113,3.872,114,4.445,115,3.215,116,3.318,117,2.108,118,3.215,119,5.355,120,2.127,121,2.558,122,2.399,123,2.764,124,2.399,125,1.909,126,2.764,127,2.399,128,2.764,129,5.355,130,3.318]],["title/components/AppComponent.html",[0,0.687,92,1.156]],["body/components/AppComponent.html",[0,1.211,1,1.115,2,0.384,3,0.433,4,1.737,5,1.737,6,1.737,7,1.737,8,0.336,14,1.445,15,3.111,16,3.111,17,2.323,19,2.323,31,1.919,38,0.033,39,0.966,50,0.813,51,0.79,58,0.384,59,0.291,62,2.567,85,1.445,86,2.115,87,2.323,88,2.323,89,2.795,90,1.737,91,1.737,92,1.954,93,1.737,94,1.115,95,1.737,96,1.115,97,1.445,98,1.737,99,1.115,100,1.737,101,1.215,102,1.445,103,0.597,104,1.737,105,0.023,106,0.023,118,3.226,125,2.567,131,2.779,132,5.026,133,4.461,134,2.567,135,2.859,136,3.226,137,3.335,138,3.335,139,4.461,140,2.779,141,2.779,142,2.779,143,3.335,144,3.335,145,2.779,146,3.335,147,3.335,148,3.335,149,2.779,150,3.335,151,5.026,152,2.779,153,3.335,154,4.461,155,3.335,156,2.412]],["title/modules/AppModule.html",[157,1.26,158,2.035]],["body/modules/AppModule.html",[1,1.745,2,0.283,3,0.319,8,0.248,10,2.07,32,2.717,34,2.26,38,0.034,50,1.006,51,0.582,53,1.706,54,1.063,55,1.574,56,2.045,57,2.045,58,0.414,59,0.214,85,1.063,92,2.141,94,1.745,96,1.745,99,1.745,101,1.9,105,0.019,106,0.019,120,1.574,157,1.428,158,4.086,159,1.574,160,3.548,161,3.08,162,3.08,163,2.045,164,2.045,165,2.045,166,2.045,167,2.045,168,3.002,169,3.002,170,3.002,171,3.002,172,2.474,173,2.997,174,2.045,175,1.775,176,2.455,177,2.602,178,3.598,179,3.598,180,2.455,181,3.598,182,2.455,183,2.997,184,2.045,185,2.455,186,1.775,187,2.455,188,2.455,189,2.455,190,2.455,191,1.775,192,2.455,193,1.775,194,2.455,195,2.455,196,2.455,197,2.045,198,2.045,199,2.045,200,2.045,201,2.045,202,1.574,203,2.045,204,2.455,205,1.775,206,2.455,207,2.455,208,2.455]],["title/modules/AppRoutingModule.html",[157,1.26,170,1.827]],["body/modules/AppRoutingModule.html",[0,1.212,1,1.602,2,0.428,3,0.483,8,0.375,10,2.14,38,0.034,50,0.977,51,0.881,52,1.937,58,0.551,59,0.325,62,2.14,73,3.018,94,1.602,96,1.602,99,1.602,105,0.025,106,0.025,134,2.757,135,2.384,157,1.476,170,2.757,177,3.465,197,3.098,198,3.098,199,3.098,200,3.098,201,3.098,202,2.384,203,3.098,209,3.719,210,3.719,211,3.05,212,4.791,213,1.611,214,3.719,215,3.719,216,3.098,217,3.719,218,3.719]],["title/interfaces/AppState.html",[219,1.375,220,2.035]],["body/interfaces/AppState.html",[2,0.519,3,0.586,8,0.455,21,0.73,22,1.397,38,0.032,40,0.586,50,0.73,58,0.519,103,1.136,105,0.028,106,0.028,219,2.34,220,3.463,221,1.954,222,3.262,223,3.758,224,2.138,225,2.595]],["title/classes/BaseHttpService.html",[59,0.277,121,1.827]],["body/classes/BaseHttpService.html",[2,0.32,3,0.361,8,0.586,21,0.449,22,1.017,25,1.432,26,2.834,28,0.929,35,1.284,37,1.181,38,0.033,39,1.258,40,0.645,41,0.988,43,1.734,44,0.658,45,1.819,46,2.354,47,0.853,49,3.183,50,0.449,58,0.32,59,0.343,60,2.164,65,1.208,73,2.977,79,1.446,105,0.02,106,0.02,112,2.008,113,3.59,115,2.843,117,2.354,120,1.78,121,2.262,127,2.008,136,2.843,213,1.203,226,4.365,227,2.313,228,4.964,229,5.441,230,3.932,231,3.932,232,3.932,233,3.932,234,2.843,235,3.932,236,2.777,237,3.932,238,2.777,239,4.964,240,3.275,241,2.857,242,3.932,243,2.843,244,2.777,245,3.932,246,3.932,247,2.777,248,2.777,249,2.777]],["title/components/BlogComponent.html",[0,0.687,94,1.062]],["body/components/BlogComponent.html",[0,1.013,1,0.706,2,0.243,3,0.274,4,1.099,5,1.099,6,1.099,7,1.099,8,0.213,12,1.275,13,2.494,14,0.914,15,2.753,16,2.753,17,1.674,19,1.674,21,0.342,22,0.831,23,1.749,25,1.17,26,2.569,27,2.789,28,0.706,29,2.06,30,2.137,31,2.951,33,1.845,34,1.885,35,1.211,37,0.546,38,0.034,39,0.842,40,0.506,41,0.457,44,0.761,45,1.075,46,2.063,47,0.987,48,1.674,50,0.798,51,0.5,52,1.099,53,1.001,54,0.914,55,1.353,58,0.243,59,0.184,60,1.001,61,1.526,62,1.214,64,1.758,65,0.648,68,2.06,73,1.099,74,1.758,75,1.353,76,1.523,77,2.06,79,1.674,81,2.324,82,3.146,83,2.324,85,0.914,86,1.523,87,1.674,88,1.674,89,2.266,90,1.099,91,1.099,92,0.768,93,1.099,94,1.455,95,1.099,96,0.706,97,0.914,98,1.099,99,0.706,100,1.099,101,0.768,102,1.392,103,1.096,104,1.099,105,0.017,106,0.017,117,1.523,134,3.041,135,1.353,172,2.431,191,1.526,250,1.758,251,3.892,252,3.213,253,4.35,254,3.624,255,3.213,256,2.11,257,3.567,258,3.624,259,2.11,260,3.146,261,3.213,262,2.11,263,3.213,264,2.494,265,2.324,266,2.324,267,3.213,268,3.213,269,2.11,270,1.526,271,2.11,272,2.11,273,2.11,274,2.11,275,1.758,276,3.213,277,2.11,278,2.11,279,1.758,280,2.11,281,1.758,282,2.11,283,1.758,284,2.11,285,2.11,286,3.213,287,2.11,288,1.758,289,1.758,290,1.526,291,2.11]],["title/injectables/BlogService.html",[107,1.375,172,1.505]],["body/injectables/BlogService.html",[2,0.135,3,0.152,8,0.118,21,0.189,22,0.515,23,1.481,25,0.726,26,2.294,28,0.391,30,1.128,35,1.247,37,0.971,38,0.034,39,0.953,40,0.593,41,0.813,43,1.623,44,1,45,1.96,46,1.78,47,0.945,48,1.038,50,0.738,51,0.277,58,0.135,59,0.102,60,2.624,65,1.06,76,0.945,77,1.971,79,2.088,97,1.332,102,1.976,103,1.148,105,0.01,106,0.01,107,1.128,112,0.846,113,2.224,115,1.441,117,2.46,118,1.441,120,0.75,121,1.147,122,0.846,123,0.974,124,0.846,125,0.673,126,0.974,127,0.846,128,0.974,134,1.147,172,0.945,213,1.495,216,1.66,220,0.75,222,0.846,224,0.554,225,2.429,234,3.486,240,3.517,243,2.495,254,2.562,257,3.299,258,3.517,260,2.224,264,2.569,265,2.495,266,1.441,283,1.66,292,0.974,293,3.075,294,3.075,295,3.075,296,1.993,297,1.993,298,1.993,299,1.993,300,1.993,301,3.075,302,2.569,303,1.993,304,1.993,305,1.169,306,4.821,307,4.116,308,1.993,309,1.169,310,3.128,311,1.993,312,1.169,313,1.993,314,1.169,315,1.993,316,1.993,317,1.147,318,1.993,319,1.169,320,1.169,321,1.993,322,2.899,323,1.169,324,1.169,325,1.993,326,1.993,327,1.993,328,3.517,329,1.66,330,1.169,331,1.441,332,3.128,333,1.993,334,3.075,335,1.169,336,1.993,337,1.993,338,1.66,339,0.609,340,0.974,341,1.883,342,0.846,343,0.75,344,1.169,345,0.554,346,0.791,347,1.147,348,1.169,349,0.974,350,2.604,351,3.075,352,1.169,353,1.169,354,1.169,355,1.169,356,1.169,357,1.169,358,2.604,359,1.169,360,1.993,361,2.604,362,1.169,363,3.075,364,1.993,365,1.169,366,1.169,367,1.169,368,1.169,369,1.993,370,1.169,371,1.169,372,1.169,373,1.169,374,1.169,375,3.075,376,1.993,377,1.993,378,1.169,379,1.169,380,1.169,381,1.169,382,0.974,383,0.974,384,1.169,385,2.604,386,1.169,387,1.169,388,1.169,389,1.169,390,1.169,391,1.169,392,1.169,393,1.993,394,1.169,395,1.169,396,1.169,397,1.993,398,1.169,399,0.846,400,1.169,401,1.169]],["title/pipes/CapitalizePipe.html",[168,1.827,402,1.654]],["body/pipes/CapitalizePipe.html",[2,0.437,3,0.493,8,0.383,12,1.506,14,1.644,23,1.491,25,1.382,35,0.982,37,0.982,38,0.033,39,1.158,40,0.493,41,0.822,43,1.71,44,1.268,45,1.79,50,0.614,51,0.899,58,0.437,59,0.331,65,1.166,105,0.025,106,0.025,168,2.793,264,3.431,402,3.037,403,3.162,404,4.854,405,4.854,406,4.079,407,4.044,408,4.044,409,3.162,410,4.044,411,5.352,412,3.795,413,4.044,414,3.795,415,3.795,416,3.795,417,3.795]],["title/pipes/EsDatePipe.html",[169,1.827,402,1.654]],["body/pipes/EsDatePipe.html",[2,0.464,3,0.524,8,0.407,12,1.6,14,1.747,23,1.549,25,1.468,35,1.043,37,1.043,38,0.033,39,1.191,40,0.524,41,0.873,43,1.674,44,0.955,45,1.687,50,0.816,51,0.955,58,0.464,59,0.352,68,3.233,105,0.026,106,0.026,169,2.902,193,3.647,402,2.867,409,3.359,410,4.202,413,4.202,418,4.202,419,3.359,420,4.202,421,4.032,422,4.202,423,4.032,424,4.032,425,4.032,426,4.032,427,4.032]],["title/modules/NgrxStoreModule.html",[157,1.26,171,1.827]],["body/modules/NgrxStoreModule.html",[2,0.514,3,0.58,8,0.45,38,0.033,50,0.967,51,1.057,58,0.514,59,0.39,103,0.961,105,0.028,106,0.028,157,1.771,171,3.089,177,3.882,339,2.325,347,2.569,428,4.464,429,4.464,430,4.464,431,4.464,432,4.464]],["title/components/PageNotFoundComponent.html",[0,0.687,96,1.062]],["body/components/PageNotFoundComponent.html",[0,1.086,1,0.83,2,0.286,3,0.323,4,1.293,5,1.293,6,1.293,7,1.293,8,0.251,12,1.44,13,2.748,14,1.076,15,2.889,16,2.889,17,1.89,19,1.89,21,0.402,22,0.939,23,1.609,25,1.321,27,3.023,28,0.83,29,2.326,30,2.173,31,3.113,35,1.109,37,0.642,38,0.034,39,0.928,40,0.472,41,0.537,44,0.588,45,1.213,47,0.763,50,0.694,51,0.588,52,1.293,53,1.177,54,1.076,58,0.286,59,0.217,60,1.177,61,1.796,75,1.592,76,2.236,85,1.076,86,1.72,87,1.89,88,1.89,89,2.456,90,1.293,91,1.293,92,0.904,93,1.293,94,0.83,95,1.293,96,1.577,97,2.403,98,1.293,99,0.83,100,1.293,101,0.904,102,1.076,103,0.445,104,1.293,105,0.019,106,0.019,125,2.088,202,3.023,211,2.088,213,1.076,328,3.572,329,3.023,433,3.928,434,2.069,435,3.628,436,4.287,437,3.628,438,5.892,439,3.628,440,2.483,441,2.624,442,3.628,443,3.628,444,3.023,445,3.023,446,3.628,447,4.287,448,3.628,449,4.287,450,2.483,451,2.483,452,3.628,453,2.483,454,2.483,455,2.483,456,3.628,457,3.628,458,2.483,459,3.628,460,3.023,461,4.715]],["title/interfaces/Post.html",[103,0.568,219,1.375]],["body/interfaces/Post.html",[2,0.451,3,0.51,8,0.396,21,0.635,22,1.282,30,2.473,38,0.032,40,0.782,41,1.302,43,1.812,49,2.974,58,0.451,102,2.473,103,0.888,105,0.026,106,0.026,219,2.147,307,4.129,310,4.757,382,5.088,462,3.267]],["title/components/PostComponent.html",[0,0.687,99,1.062]],["body/components/PostComponent.html",[0,1,1,0.685,2,0.236,3,0.266,4,1.066,5,1.066,6,1.066,7,1.066,8,0.207,12,1.246,13,2.448,14,0.887,15,2.726,16,2.726,17,1.635,19,1.635,21,0.331,22,0.812,23,1.737,25,1.143,26,1.989,27,2.745,28,1.05,29,1.312,30,2.198,31,2.919,33,1.81,34,1.855,35,1.195,37,0.529,38,0.034,39,0.827,40,0.556,41,0.443,43,1.077,44,0.905,45,0.685,46,1.488,47,1.173,48,2.23,50,0.847,51,0.485,52,1.066,53,0.97,54,0.887,55,1.312,58,0.236,59,0.179,60,2.189,65,0.629,73,1.066,75,1.312,76,0.97,77,1.312,79,1.635,81,1.48,82,2.27,83,1.48,85,0.887,86,1.488,87,1.635,88,1.635,89,2.23,90,1.066,91,1.066,92,0.745,93,1.066,94,0.685,95,1.066,96,0.685,97,1.654,98,1.066,99,1.432,100,1.066,101,0.745,102,0.887,103,1.062,104,1.066,105,0.016,106,0.016,117,2.03,172,2.405,186,2.27,191,1.48,213,0.887,224,0.97,257,3.785,264,2.448,266,2.27,279,1.705,281,1.705,307,2.761,322,2.761,331,3.096,342,1.48,343,1.312,399,2.27,406,2.27,420,2.615,463,1.705,464,3.181,465,2.615,466,4.282,467,5.073,468,3.139,469,2.047,470,2.047,471,3.139,472,3.139,473,2.047,474,3.139,475,2.047,476,2.012,477,2.047,478,3.139,479,2.047,480,2.047,481,2.047,482,3.139,483,2.047,484,2.047,485,1.312,486,2.047,487,2.047,488,2.047,489,3.139,490,2.615,491,3.139]],["title/interfaces/Seo.html",[33,1.505,219,1.375]],["body/interfaces/Seo.html",[2,0.484,3,0.546,8,0.424,21,0.68,22,1.339,30,2.535,33,2.453,38,0.032,40,0.76,41,1.12,43,1.808,58,0.484,65,1.797,73,3.048,105,0.027,106,0.027,219,2.242,485,3.751,492,3.501]],["title/injectables/SeoService.html",[34,1.375,107,1.375]],["body/injectables/SeoService.html",[2,0.329,3,0.372,8,0.289,21,0.463,22,1.421,23,1.426,25,1.463,28,0.957,33,2.73,34,1.74,35,1.039,37,1.039,38,0.034,39,1.247,40,0.522,41,0.87,45,0.957,49,3.152,50,0.814,51,0.678,53,1.357,54,1.24,58,0.329,59,0.25,65,1.234,105,0.021,106,0.021,107,2.011,117,2.386,124,2.07,125,1.647,156,2.07,243,2.07,342,2.07,444,3.347,476,2.975,493,2.385,494,4.017,495,2.863,496,5.931,497,2.863,498,4.017,499,2.863,500,3.226,501,4.192,502,4.017,503,2.863,504,2.863,505,5.032,506,2.863,507,2.863,508,2.863,509,5.032,510,2.863,511,6.051,512,2.863,513,2.863,514,2.863,515,2.863,516,2.863,517,4.017,518,2.863,519,2.863,520,2.863,521,2.863,522,2.863,523,2.863,524,2.863,525,2.863,526,2.863,527,2.863]],["title/classes/SetPosts.html",[59,0.277,345,1.505]],["body/classes/SetPosts.html",[2,0.325,3,0.367,8,0.285,12,1.985,21,0.457,22,1.03,23,1.727,28,1.764,35,1.192,37,1.364,38,0.034,39,0.611,40,0.769,41,0.611,43,1.619,44,0.669,47,0.868,50,0.644,58,0.647,59,0.437,65,0.868,103,1.124,105,0.02,106,0.02,213,1.996,221,2.167,224,1.339,225,3.035,241,2.879,302,3.207,317,2.29,339,1.471,345,2.185,346,1.985,347,2.879,500,2.551,528,1.471,529,3.081,530,3.618,531,4.065,532,2.043,533,3.98,534,2.825,535,2.879,536,3.148,537,3.332]],["title/components/ThumbnailPostComponent.html",[0,0.687,101,1.156]],["body/components/ThumbnailPostComponent.html",[0,1.113,1,0.885,2,0.305,3,0.344,4,1.378,5,1.378,6,1.378,7,1.378,8,0.267,14,1.146,15,2.939,16,2.939,17,1.979,19,1.979,21,0.428,30,1.146,35,0.684,38,0.033,39,0.822,40,0.344,44,0.627,47,0.813,48,1.979,50,0.615,51,0.627,58,0.305,59,0.231,76,2.538,85,1.146,86,1.801,87,1.979,88,1.979,89,2.53,90,1.378,91,1.378,92,0.963,93,1.378,94,0.885,95,1.378,96,0.885,97,1.146,98,1.378,99,0.885,100,1.378,101,1.769,102,2.445,103,1.029,104,1.378,105,0.02,106,0.02,140,2.204,141,3.165,142,3.165,145,2.204,149,3.703,152,3.703,205,2.747,224,1.254,288,2.204,289,4.046,290,3.512,399,2.747,406,2.747,464,3.703,465,3.165,485,2.435,538,3.165,539,2.204,540,4.046,541,2.646,542,2.646,543,2.646,544,4.444,545,4.444,546,5.354,547,4.444,548,4.444,549,4.444,550,2.646,551,4.444,552,5.144,553,2.646,554,2.646,555,4.444,556,3.799,557,3.799,558,2.646,559,2.646,560,2.646,561,2.646,562,2.646,563,2.204,564,2.646,565,2.646,566,2.646,567,2.646,568,2.646,569,2.646,570,2.646]],["title/classes/UpdatePost.html",[59,0.277,346,1.26]],["body/classes/UpdatePost.html",[2,0.327,3,0.369,8,0.286,12,1.989,21,0.459,22,1.033,23,1.729,28,1.766,35,1.195,37,1.366,38,0.034,39,0.614,40,0.769,41,0.614,43,1.621,44,0.672,47,0.872,50,0.646,58,0.648,59,0.437,65,0.872,103,1.124,105,0.021,106,0.021,213,2.001,221,2.171,224,1.345,225,3.04,241,2.297,302,3.213,317,2.658,339,1.478,345,1.893,346,2.096,347,2.884,500,1.819,528,1.478,529,3.083,530,3.625,531,4.07,532,2.052,535,2.658,536,3.239,537,3.34,571,3.992,572,2.838]],["title/classes/UpdatePosts.html",[59,0.277,346,1.26]],["body/classes/UpdatePosts.html",[2,0.327,3,0.369,8,0.286,12,1.989,21,0.459,22,1.033,23,1.729,28,1.766,35,1.195,37,1.366,38,0.034,39,0.614,40,0.769,41,0.614,43,1.621,44,0.672,47,0.872,50,0.646,58,0.648,59,0.437,65,0.872,103,1.124,105,0.021,106,0.021,213,2.001,221,2.171,224,1.345,225,3.04,241,2.297,302,3.213,317,2.658,339,1.478,345,1.893,346,2.096,347,2.884,500,1.819,528,1.478,529,3.083,530,3.625,531,4.07,532,2.052,535,2.658,536,3.239,537,3.34,573,3.992,574,2.838]],["title/coverage.html",[575,3.595]],["body/coverage.html",[0,1.177,1,0.927,8,0.28,9,2.308,10,2.259,11,2.308,32,1.443,33,1.314,34,1.2,38,0.033,40,0.36,59,0.433,76,2.825,92,1.009,94,0.927,96,0.927,99,0.927,101,1.009,103,0.703,105,0.02,106,0.02,107,1.975,108,2.308,109,2.308,121,1.594,131,2.308,168,1.594,169,1.594,172,1.314,193,2.004,202,1.776,205,2.004,219,1.975,220,1.776,221,2.552,222,2.004,223,2.308,226,2.308,227,2.308,250,2.308,290,4.13,292,2.308,341,2.004,343,1.776,345,1.314,346,1.968,383,2.308,402,2.045,403,2.308,418,2.308,419,2.308,433,2.308,434,2.308,462,2.308,463,2.308,476,1.776,492,2.308,493,2.308,528,2.832,535,1.594,536,2.259,538,2.308,539,2.308,575,2.308,576,2.308,577,2.771,578,2.771,579,5.591,580,3.27,581,4.043,582,5.712,583,3.926,584,3.27,585,3.786,586,2.308,587,2.771,588,2.771,589,4.559,590,4.559,591,3.798,592,4.559,593,4.559,594,3.926,595,3.926,596,2.771,597,2.771,598,2.771,599,2.771,600,2.771,601,2.771,602,2.308,603,3.27,604,2.308,605,2.771,606,2.771]],["title/dependencies.html",[159,2.445,607,2.66]],["body/dependencies.html",[38,0.034,51,0.949,52,2.087,53,2.382,54,2.176,105,0.026,106,0.026,159,2.569,161,2.898,183,4.185,184,3.338,186,2.898,339,2.087,340,3.338,422,3.338,608,4.007,609,4.007,610,4.007,611,6.136,612,4.007,613,4.007,614,4.007,615,4.007,616,4.007,617,4.007,618,4.007,619,4.007,620,4.007,621,4.007,622,4.007,623,4.007,624,4.007,625,4.007,626,4.007,627,4.007,628,4.007,629,4.007,630,4.007,631,4.007,632,4.007,633,4.007]],["title/miscellaneous/functions.html",[585,2.758,634,1.386]],["body/miscellaneous/functions.html",[21,0.569,37,1.472,38,0.031,39,1.232,40,0.457,41,1.232,44,1.222,45,1.176,46,2.19,49,1.832,65,1.748,103,1.132,105,0.024,106,0.024,117,2.19,221,1.523,241,2.024,260,2.543,317,3.153,331,2.543,332,4.299,343,2.962,346,2.175,349,5.033,529,2.687,540,2.93,584,2.93,585,3.341,586,4.742,591,2.93,634,1.832,635,4.62,636,5.16,637,3.517,638,4.62,639,3.849,640,3.517,641,4.62,642,3.517,643,4.62,644,5.16,645,3.517,646,3.517,647,3.517,648,3.517]],["title/index.html",[21,0.431,441,1.924,649,2.216]],["body/index.html",[0,0.741,2,0.394,38,0.023,62,1.97,66,3.781,67,2.852,68,3.617,69,3.781,70,3.781,71,2.852,72,2.852,103,0.813,105,0.023,106,0.023,134,2.612,135,2.195,136,3.682,156,2.476,270,2.476,407,2.852,460,4.7,490,4.831,650,3.424,651,4.539,652,3.424,653,4.539,654,5.092,655,5.422,656,3.424,657,3.424,658,3.424,659,3.424,660,4.539,661,3.424,662,3.424,663,5.092,664,3.424,665,4.539,666,4.539,667,3.424,668,3.424,669,3.424,670,3.424,671,3.424,672,3.424,673,3.424,674,5.422,675,4.539,676,3.424,677,5.422,678,3.424,679,3.424,680,5.092,681,3.424,682,3.424,683,4.539,684,3.424,685,3.424,686,3.424,687,3.424,688,3.424,689,2.852,690,3.424,691,3.424,692,3.424,693,5.092,694,4.539,695,4.539,696,3.424,697,3.424,698,3.424,699,4.539,700,3.424,701,3.424,702,3.424,703,3.424,704,3.424,705,3.424]],["title/license.html",[441,1.924,649,2.216,706,2.216]],["body/license.html",[8,0.373,38,0.025,105,0.025,106,0.025,162,2.674,175,2.674,270,3.452,275,5.14,529,1.926,563,3.081,576,3.081,706,3.081,707,3.698,708,5.286,709,3.698,710,3.698,711,3.698,712,3.698,713,3.698,714,4.774,715,3.698,716,3.698,717,3.698,718,3.698,719,3.698,720,5.586,721,3.698,722,4.774,723,5.286,724,3.698,725,5.286,726,4.774,727,3.977,728,3.698,729,3.698,730,3.698,731,3.698,732,3.698,733,3.698,734,3.698,735,3.698,736,3.698,737,3.698,738,3.698,739,3.698,740,3.698,741,4.774,742,4.774,743,3.698,744,3.698,745,4.774,746,3.698,747,3.698,748,3.698,749,3.698,750,3.698,751,3.698,752,3.698,753,3.698,754,3.698,755,3.698,756,3.698,757,3.698,758,3.698,759,3.698,760,3.698,761,3.698,762,3.698,763,3.698,764,3.698,765,3.698,766,3.698]],["title/modules.html",[157,1.712]],["body/modules.html",[38,0.029,54,2.077,105,0.029,106,0.029,157,1.903,158,3.074,170,2.759,171,2.759,767,4.795,768,4.795,769,5.933,770,5.601,771,5.601]],["title/overview.html",[772,3.595]],["body/overview.html",[0,0.751,1,1.714,32,2.67,34,2.22,38,0.033,58,0.399,59,0.303,85,1.503,92,2.161,94,1.714,96,1.714,99,1.714,101,1.866,105,0.024,106,0.024,107,1.503,157,1.817,158,4.18,159,2.224,160,2.89,161,2.509,162,2.509,163,2.89,164,2.89,165,2.89,166,2.89,167,2.89,168,2.95,169,2.95,170,2.95,171,2.95,172,2.43,173,3.815,174,2.89,175,2.509,211,1.997,219,1.503,402,1.807,408,2.89,445,2.89,689,4.27,772,2.89,773,3.47,774,3.47]],["title/routes.html",[211,2.483]],["body/routes.html",[38,0.03,105,0.03,106,0.03,211,2.899]],["title/miscellaneous/typealiases.html",[634,1.386,775,3.814]],["body/miscellaneous/typealiases.html",[21,0.773,38,0.031,40,0.621,105,0.029,106,0.029,221,2.069,345,2.265,346,2.218,528,2.488,529,3.086,634,2.488,776,4.777,777,3.98]],["title/miscellaneous/variables.html",[581,2.758,634,1.386]],["body/miscellaneous/variables.html",[21,0.569,38,0.033,40,0.774,43,1.74,44,1.411,47,1.829,86,1.667,103,0.924,105,0.024,106,0.024,122,3.341,221,1.523,234,3.341,265,2.543,322,2.543,338,3.849,341,3.731,476,3.307,485,2.962,501,2.93,528,1.832,535,3.153,536,3.477,580,2.93,581,2.543,602,2.93,603,4.867,604,2.93,634,1.832,639,4.565,727,2.93,777,4.299,778,4.62,779,3.517,780,3.517,781,3.517,782,3.517,783,3.517,784,3.517]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":76,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{}}}],["0.2",{"_index":557,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["0.5",{"_index":549,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["0.5rem",{"_index":559,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["0.8.26",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":546,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["1",{"_index":329,"title":{},"body":{"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{}}}],["1.14.6",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["1.15.0",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":566,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["1.9.0",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":290,"title":{},"body":{"components/BlogComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{}}}],["1000",{"_index":455,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["11/13",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":334,"title":{},"body":{"injectables/BlogService.html":{}}}],["128",{"_index":508,"title":{},"body":{"injectables/SeoService.html":{}}}],["14rem",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":552,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["2",{"_index":408,"title":{},"body":{"pipes/CapitalizePipe.html":{},"overview.html":{}}}],["2.22.2",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":710,"title":{},"body":{"license.html":{}}}],["2019",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["3",{"_index":689,"title":{},"body":{"index.html":{},"overview.html":{}}}],["3.3.1",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["3/5",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":600,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":774,"title":{},"body":{"overview.html":{}}}],["4.1.3",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":447,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["5",{"_index":445,"title":{},"body":{"components/PageNotFoundComponent.html":{},"overview.html":{}}}],["50",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":773,"title":{},"body":{"overview.html":{}}}],["6.1.2",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["7.0.2",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["7rem",{"_index":567,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["84",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":547,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["_aboutm",{"_index":110,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["_generatebasicpost",{"_index":296,"title":{},"body":{"injectables/BlogService.html":{}}}],["_generatebasicpost(id",{"_index":304,"title":{},"body":{"injectables/BlogService.html":{}}}],["_getpostcov",{"_index":297,"title":{},"body":{"injectables/BlogService.html":{}}}],["_getpostcover(id",{"_index":308,"title":{},"body":{"injectables/BlogService.html":{}}}],["_getpostthumbnail",{"_index":298,"title":{},"body":{"injectables/BlogService.html":{}}}],["_getpostthumbnail(id",{"_index":311,"title":{},"body":{"injectables/BlogService.html":{}}}],["_parsepostdata",{"_index":299,"title":{},"body":{"injectables/BlogService.html":{}}}],["_parsepostdata(post",{"_index":313,"title":{},"body":{"injectables/BlogService.html":{}}}],["_url",{"_index":228,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["a.dat",{"_index":357,"title":{},"body":{"injectables/BlogService.html":{}}}],["aboutm",{"_index":24,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["aboutmecompon",{"_index":1,"title":{"components/AboutMeComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["aboutmecomponent.ngoninit",{"_index":84,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["aboutmeservic",{"_index":32,"title":{"injectables/AboutMeService.html":{}},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["abov",{"_index":740,"title":{},"body":{"license.html":{}}}],["acced",{"_index":686,"title":{},"body":{"index.html":{}}}],["acerca",{"_index":670,"title":{},"body":{"index.html":{}}}],["action",{"_index":529,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["activ",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedrout",{"_index":467,"title":{},"body":{"components/PostComponent.html":{}}}],["actual_compon",{"_index":104,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["alias",{"_index":776,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allpostsalreadyload",{"_index":293,"title":{},"body":{"injectables/BlogService.html":{}}}],["almacena",{"_index":704,"title":{},"body":{"index.html":{}}}],["alreadi",{"_index":326,"title":{},"body":{"injectables/BlogService.html":{}}}],["and/or",{"_index":733,"title":{},"body":{"license.html":{}}}],["angular",{"_index":407,"title":{},"body":{"pipes/CapitalizePipe.html":{},"index.html":{}}}],["angular/anim",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":120,"title":{},"body":{"injectables/AboutMeService.html":{},"modules/AppModule.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{}}}],["angular/compil",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":51,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"components/ThumbnailPostComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":53,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":52,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"dependencies.html":{}}}],["apasiona",{"_index":71,"title":{},"body":{"components/AboutMeComponent.html":{},"index.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["app.compon",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":92,"title":{"components/AppComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":158,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodul",{"_index":170,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstat",{"_index":220,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"injectables/BlogService.html":{},"coverage.html":{}}}],["aqu",{"_index":663,"title":{},"body":{"index.html":{}}}],["aris",{"_index":765,"title":{},"body":{"license.html":{}}}],["arr",{"_index":397,"title":{},"body":{"injectables/BlogService.html":{}}}],["arr[0].replace(titlebeautifyregex",{"_index":400,"title":{},"body":{"injectables/BlogService.html":{}}}],["array",{"_index":241,"title":{},"body":{"classes/BaseHttpService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{}}}],["articl",{"_index":521,"title":{},"body":{"injectables/SeoService.html":{}}}],["artículo",{"_index":273,"title":{},"body":{"components/BlogComponent.html":{}}}],["assets/img/ivanhdzd.jpg",{"_index":510,"title":{},"body":{"injectables/SeoService.html":{}}}],["associ",{"_index":721,"title":{},"body":{"license.html":{}}}],["async",{"_index":26,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{}}}],["author",{"_index":755,"title":{},"body":{"license.html":{}}}],["autogenerada",{"_index":700,"title":{},"body":{"index.html":{}}}],["automática",{"_index":685,"title":{},"body":{"index.html":{}}}],["avail",{"_index":771,"title":{},"body":{"modules.html":{}}}],["await",{"_index":79,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{}}}],["b",{"_index":355,"title":{},"body":{"injectables/BlogService.html":{}}}],["b.date",{"_index":356,"title":{},"body":{"injectables/BlogService.html":{}}}],["base",{"_index":122,"title":{},"body":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{},"miscellaneous/variables.html":{}}}],["base_href",{"_index":476,"title":{},"body":{"components/PostComponent.html":{},"injectables/SeoService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basehttpservic",{"_index":121,"title":{"classes/BaseHttpService.html":{}},"body":{"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{},"coverage.html":{}}}],["basic",{"_index":240,"title":{},"body":{"classes/BaseHttpService.html":{},"injectables/BlogService.html":{}}}],["blog",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"index.html":{}}}],["blog'},{'nam",{"_index":95,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["blog.component.html",{"_index":252,"title":{},"body":{"components/BlogComponent.html":{}}}],["blog.component.scss",{"_index":251,"title":{},"body":{"components/BlogComponent.html":{}}}],["blogcompon",{"_index":94,"title":{"components/BlogComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["blogcomponent.loadmorepost",{"_index":285,"title":{},"body":{"components/BlogComponent.html":{}}}],["blogcomponent.ngoninit",{"_index":278,"title":{},"body":{"components/BlogComponent.html":{}}}],["blogservic",{"_index":172,"title":{"injectables/BlogService.html":{}},"body":{"modules/AppModule.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["boolean",{"_index":264,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"components/PostComponent.html":{}}}],["bootstrap",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["bottom",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["box",{"_index":544,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["brows",{"_index":769,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":54,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":268,"title":{},"body":{"components/BlogComponent.html":{}}}],["c",{"_index":709,"title":{},"body":{"license.html":{}}}],["calc(100vh",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["capit",{"_index":406,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["capitalizepip",{"_index":168,"title":{"pipes/CapitalizePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizePipe.html":{},"coverage.html":{},"overview.html":{}}}],["card",{"_index":542,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["cargar",{"_index":286,"title":{},"body":{"components/BlogComponent.html":{}}}],["catch",{"_index":81,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["charg",{"_index":718,"title":{},"body":{"license.html":{}}}],["claim",{"_index":758,"title":{},"body":{"license.html":{}}}],["class",{"_index":59,"title":{"classes/BaseHttpService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"overview.html":{}}}],["classes/constants.class",{"_index":342,"title":{},"body":{"injectables/BlogService.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{}}}],["clearinterval(interv",{"_index":453,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["clone",{"_index":586,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["clone(input",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cluster_appmodul",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc",{"_index":683,"title":{},"body":{"index.html":{}}}],["compon",{"_index":0,"title":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":90,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["components/thumbnail",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":666,"title":{},"body":{"index.html":{}}}],["condit",{"_index":739,"title":{},"body":{"license.html":{}}}],["config",{"_index":502,"title":{},"body":{"injectables/SeoService.html":{}}}],["config.descript",{"_index":505,"title":{},"body":{"injectables/SeoService.html":{}}}],["config.description.replace(/^\\n",{"_index":506,"title":{},"body":{"injectables/SeoService.html":{}}}],["config.imag",{"_index":509,"title":{},"body":{"injectables/SeoService.html":{}}}],["config.path",{"_index":527,"title":{},"body":{"injectables/SeoService.html":{}}}],["config.titl",{"_index":517,"title":{},"body":{"injectables/SeoService.html":{}}}],["configur",{"_index":474,"title":{},"body":{"components/PostComponent.html":{}}}],["conforma",{"_index":652,"title":{},"body":{"index.html":{}}}],["connect",{"_index":766,"title":{},"body":{"license.html":{}}}],["console.warn('[error",{"_index":83,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["const",{"_index":213,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["constant",{"_index":337,"title":{},"body":{"injectables/BlogService.html":{}}}],["constructor",{"_index":28,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["constructor(http",{"_index":112,"title":{},"body":{"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{}}}],["constructor(meta",{"_index":495,"title":{},"body":{"injectables/SeoService.html":{}}}],["constructor(payload",{"_index":532,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["constructor(priv",{"_index":504,"title":{},"body":{"injectables/SeoService.html":{}}}],["constructor(protect",{"_index":127,"title":{},"body":{"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{}}}],["constructor(publ",{"_index":537,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["constructor(titl",{"_index":29,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{}}}],["contain",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["contenido",{"_index":705,"title":{},"body":{"index.html":{}}}],["content",{"_index":49,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"interfaces/Post.html":{},"injectables/SeoService.html":{},"miscellaneous/functions.html":{}}}],["contract",{"_index":762,"title":{},"body":{"license.html":{}}}],["copi",{"_index":720,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":708,"title":{},"body":{"license.html":{}}}],["core",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":446,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["cover",{"_index":310,"title":{},"body":{"injectables/BlogService.html":{},"interfaces/Post.html":{}}}],["cover.jpg",{"_index":390,"title":{},"body":{"injectables/BlogService.html":{}}}],["coverag",{"_index":575,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cuenta",{"_index":665,"title":{},"body":{"index.html":{}}}],["current",{"_index":331,"title":{},"body":{"injectables/BlogService.html":{},"components/PostComponent.html":{},"miscellaneous/functions.html":{}}}],["currentpag",{"_index":294,"title":{},"body":{"injectables/BlogService.html":{}}}],["cursor",{"_index":553,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["código",{"_index":695,"title":{},"body":{"index.html":{}}}],["d",{"_index":425,"title":{},"body":{"pipes/EsDatePipe.html":{}}}],["damag",{"_index":759,"title":{},"body":{"license.html":{}}}],["data",{"_index":117,"title":{},"body":{"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"miscellaneous/functions.html":{}}}],["date",{"_index":382,"title":{},"body":{"injectables/BlogService.html":{},"interfaces/Post.html":{}}}],["date(id.replace(id.split(/^\\d{4",{"_index":384,"title":{},"body":{"injectables/BlogService.html":{}}}],["date(value)).format('dddd",{"_index":424,"title":{},"body":{"pipes/EsDatePipe.html":{}}}],["date.pip",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["date.pipe.t",{"_index":419,"title":{},"body":{"pipes/EsDatePipe.html":{},"coverage.html":{}}}],["date.pipe.ts:8",{"_index":421,"title":{},"body":{"pipes/EsDatePipe.html":{}}}],["date/",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"pipes/EsDatePipe.html":{},"coverage.html":{}}}],["de",{"_index":68,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"pipes/EsDatePipe.html":{},"index.html":{}}}],["deal",{"_index":722,"title":{},"body":{"license.html":{}}}],["declar",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decodeuricomponent(escape(atob(res['cont",{"_index":248,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["decor",{"_index":569,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["decrement",{"_index":442,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["default",{"_index":47,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":35,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["del",{"_index":703,"title":{},"body":{"index.html":{}}}],["dentro",{"_index":694,"title":{},"body":{"index.html":{}}}],["depend",{"_index":159,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desarrollo",{"_index":274,"title":{},"body":{"components/BlogComponent.html":{}}}],["descript",{"_index":65,"title":{},"body":{"components/AboutMeComponent.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{}}}],["develop",{"_index":701,"title":{},"body":{"index.html":{}}}],["direct",{"_index":88,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["directori",{"_index":239,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["directorio",{"_index":699,"title":{},"body":{"index.html":{}}}],["disqu",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"components/PostComponent.html":{},"dependencies.html":{}}}],["disqusmodul",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["disqusmodule.forroot('ivanhdzd",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["distribut",{"_index":731,"title":{},"body":{"license.html":{}}}],["doc",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"classes/BaseHttpService.html":{},"index.html":{}}}],["document",{"_index":576,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documentación",{"_index":680,"title":{},"body":{"index.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["dond",{"_index":655,"title":{},"body":{"index.html":{}}}],["durán",{"_index":713,"title":{},"body":{"license.html":{}}}],["dynam",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["d{2",{"_index":385,"title":{},"body":{"injectables/BlogService.html":{}}}],["d{2}/).join",{"_index":386,"title":{},"body":{"injectables/BlogService.html":{}}}],["e",{"_index":697,"title":{},"body":{"index.html":{}}}],["each",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":490,"title":{},"body":{"components/PostComponent.html":{},"index.html":{}}}],["element",{"_index":87,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["en",{"_index":460,"title":{},"body":{"components/PageNotFoundComponent.html":{},"index.html":{}}}],["encontrada",{"_index":449,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["encuentra",{"_index":675,"title":{},"body":{"index.html":{}}}],["environ",{"_index":603,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":82,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["error",{"_index":456,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["es",{"_index":679,"title":{},"body":{"index.html":{}}}],["esa",{"_index":662,"title":{},"body":{"index.html":{}}}],["esdat",{"_index":420,"title":{},"body":{"pipes/EsDatePipe.html":{},"components/PostComponent.html":{}}}],["esdatepip",{"_index":169,"title":{"pipes/EsDatePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/EsDatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["est",{"_index":688,"title":{},"body":{"index.html":{}}}],["estructura",{"_index":687,"title":{},"body":{"index.html":{}}}],["event",{"_index":754,"title":{},"body":{"license.html":{}}}],["exist",{"_index":327,"title":{},"body":{"injectables/BlogService.html":{}}}],["export",{"_index":58,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"overview.html":{}}}],["express",{"_index":747,"title":{},"body":{"license.html":{}}}],["extend",{"_index":126,"title":{},"body":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{}}}],["fals",{"_index":322,"title":{},"body":{"injectables/BlogService.html":{},"components/PostComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"license.html":{}}}],["filter",{"_index":560,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["final",{"_index":279,"title":{},"body":{"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["finalment",{"_index":676,"title":{},"body":{"index.html":{}}}],["first.tolocaleuppercas",{"_index":415,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["firstindex",{"_index":366,"title":{},"body":{"injectables/BlogService.html":{}}}],["fit",{"_index":750,"title":{},"body":{"license.html":{}}}],["flag",{"_index":266,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{}}}],["folder",{"_index":242,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["follow",{"_index":738,"title":{},"body":{"license.html":{}}}],["font",{"_index":564,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["footer",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":435,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found'},{'nam",{"_index":98,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["found.compon",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.html",{"_index":437,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":436,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.t",{"_index":434,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":439,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:21",{"_index":440,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/pag",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":717,"title":{},"body":{"license.html":{}}}],["fuent",{"_index":702,"title":{},"body":{"index.html":{}}}],["full",{"_index":216,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BlogService.html":{}}}],["function",{"_index":585,"title":{"miscellaneous/functions.html":{}},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions/utils.funct",{"_index":475,"title":{},"body":{"components/PostComponent.html":{}}}],["furnish",{"_index":736,"title":{},"body":{"license.html":{}}}],["g",{"_index":389,"title":{},"body":{"injectables/BlogService.html":{}}}],["gener",{"_index":306,"title":{},"body":{"injectables/BlogService.html":{}}}],["generada",{"_index":681,"title":{},"body":{"index.html":{}}}],["get",{"_index":649,"title":{"index.html":{},"license.html":{}},"body":{}}],["getaboutdata",{"_index":111,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["getfil",{"_index":230,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["getfile(path",{"_index":235,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["getfold",{"_index":231,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["getfolder(path",{"_index":237,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["getpost",{"_index":300,"title":{},"body":{"injectables/BlogService.html":{}}}],["getpost(id",{"_index":318,"title":{},"body":{"injectables/BlogService.html":{}}}],["github",{"_index":118,"title":{},"body":{"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{}}}],["grant",{"_index":716,"title":{},"body":{"license.html":{}}}],["graph",{"_index":770,"title":{},"body":{"modules.html":{}}}],["hablo",{"_index":656,"title":{},"body":{"index.html":{}}}],["hacer",{"_index":72,"title":{},"body":{"components/AboutMeComponent.html":{},"index.html":{}}}],["height",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["herebi",{"_index":715,"title":{},"body":{"license.html":{}}}],["hernández",{"_index":712,"title":{},"body":{"license.html":{}}}],["holder",{"_index":756,"title":{},"body":{"license.html":{}}}],["hover",{"_index":558,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["href",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":86,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":115,"title":{},"body":{"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{}}}],["http.servic",{"_index":123,"title":{},"body":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{}}}],["http.service.t",{"_index":227,"title":{},"body":{"classes/BaseHttpService.html":{},"coverage.html":{}}}],["http.service.ts:14",{"_index":236,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["http.service.ts:24",{"_index":238,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["http.service.ts:5",{"_index":232,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["http://codersvibe.com/cr",{"_index":405,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["httpclient",{"_index":113,"title":{},"body":{"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{}}}],["httpclientmodul",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.github.com/repos/ivanhdzd/ivanhdzd.github.io/contents/doc",{"_index":233,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["https://github.com/ivanhdzd/ivanhdzd.github.io/raw/docs/doc",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ivanhdzd.github.io",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":307,"title":{},"body":{"injectables/BlogService.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{}}}],["id.split(/^\\d{4",{"_index":387,"title":{},"body":{"injectables/BlogService.html":{}}}],["identifi",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["imag",{"_index":485,"title":{},"body":{"components/PostComponent.html":{},"interfaces/Seo.html":{},"components/ThumbnailPostComponent.html":{},"miscellaneous/variables.html":{}}}],["img_base_url",{"_index":341,"title":{},"body":{"injectables/BlogService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implement",{"_index":12,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["impli",{"_index":748,"title":{},"body":{"license.html":{}}}],["import",{"_index":50,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["includ",{"_index":725,"title":{},"body":{"license.html":{}}}],["incluy",{"_index":698,"title":{},"body":{"index.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.md?ref=docs`).topromis",{"_index":247,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"index.html":{}}}],["initializepost",{"_index":301,"title":{},"body":{"injectables/BlogService.html":{}}}],["inject",{"_index":107,"title":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{},"injectables/SeoService.html":{}},"body":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{},"injectables/SeoService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":540,"title":{},"body":{"components/ThumbnailPostComponent.html":{},"miscellaneous/functions.html":{}}}],["instanc",{"_index":263,"title":{},"body":{"components/BlogComponent.html":{}}}],["interfac",{"_index":219,"title":{"interfaces/AppState.html":{},"interfaces/Post.html":{},"interfaces/Seo.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/Post.html":{},"interfaces/Seo.html":{},"coverage.html":{},"overview.html":{}}}],["interv",{"_index":450,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["ir",{"_index":668,"title":{},"body":{"index.html":{}}}],["it'",{"_index":645,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iv&aacute;nhdzd",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["ivanhdzd",{"_index":515,"title":{},"body":{"injectables/SeoService.html":{}}}],["iván",{"_index":711,"title":{},"body":{"license.html":{}}}],["ivánhdzd",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"injectables/SeoService.html":{},"index.html":{}}}],["join('').replac",{"_index":388,"title":{},"body":{"injectables/BlogService.html":{}}}],["jqueri",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kind",{"_index":746,"title":{},"body":{"license.html":{}}}],["la",{"_index":677,"title":{},"body":{"index.html":{}}}],["lastindex",{"_index":363,"title":{},"body":{"injectables/BlogService.html":{}}}],["lastindex).map((post",{"_index":368,"title":{},"body":{"injectables/BlogService.html":{}}}],["left",{"_index":562,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["legend",{"_index":85,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"overview.html":{}}}],["liabil",{"_index":760,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":757,"title":{},"body":{"license.html":{}}}],["licens",{"_index":706,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":726,"title":{},"body":{"license.html":{}}}],["list",{"_index":260,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{},"miscellaneous/functions.html":{}}}],["lo",{"_index":69,"title":{},"body":{"components/AboutMeComponent.html":{},"index.html":{}}}],["load",{"_index":257,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{}}}],["loadmorepost",{"_index":254,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{}}}],["m",{"_index":63,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["m&aacute;",{"_index":287,"title":{},"body":{"components/BlogComponent.html":{}}}],["manera",{"_index":684,"title":{},"body":{"index.html":{}}}],["margin",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["markdown",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["markdownmodul",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["markdownmodule.forroot",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["marketplac",{"_index":119,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["master",{"_index":692,"title":{},"body":{"index.html":{}}}],["match",{"_index":106,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":555,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["mayoría",{"_index":673,"title":{},"body":{"index.html":{}}}],["me'},{'nam",{"_index":91,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["me.compon",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["me.component.html",{"_index":20,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["me.component.scss",{"_index":18,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["me.component.t",{"_index":11,"title":{},"body":{"components/AboutMeComponent.html":{},"coverage.html":{}}}],["me.component.ts:15",{"_index":36,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["me.component.ts:29",{"_index":42,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["me.servic",{"_index":57,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppModule.html":{}}}],["me.service.t",{"_index":109,"title":{},"body":{"injectables/AboutMeService.html":{},"coverage.html":{}}}],["me.service.ts:11",{"_index":114,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["me.service.ts:21",{"_index":116,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["me/about",{"_index":10,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["merchant",{"_index":749,"title":{},"body":{"license.html":{}}}],["merg",{"_index":729,"title":{},"body":{"license.html":{}}}],["meta",{"_index":496,"title":{},"body":{"injectables/SeoService.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["method",{"_index":25,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{}}}],["mi",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"index.html":{}}}],["middot",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["min",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellan",{"_index":634,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":707,"title":{},"body":{"license.html":{}}}],["mmmm",{"_index":426,"title":{},"body":{"pipes/EsDatePipe.html":{}}}],["models/post.model",{"_index":224,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["models/seo.model",{"_index":503,"title":{},"body":{"injectables/SeoService.html":{}}}],["modifi",{"_index":728,"title":{},"body":{"license.html":{}}}],["modul",{"_index":157,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/NgrxStoreModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/NgrxStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/app",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/ngrx",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["moment",{"_index":422,"title":{},"body":{"pipes/EsDatePipe.html":{},"dependencies.html":{}}}],["moment(new",{"_index":423,"title":{},"body":{"pipes/EsDatePipe.html":{}}}],["more",{"_index":258,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{}}}],["moz",{"_index":550,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["má",{"_index":291,"title":{},"body":{"components/BlogComponent.html":{}}}],["name",{"_index":39,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":530,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["new",{"_index":383,"title":{},"body":{"injectables/BlogService.html":{},"coverage.html":{}}}],["ngmodul",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/NgrxStoreModule.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{}}}],["ngrx",{"_index":347,"title":{},"body":{"injectables/BlogService.html":{},"modules/NgrxStoreModule.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["ngrx/store",{"_index":339,"title":{},"body":{"injectables/BlogService.html":{},"modules/NgrxStoreModule.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"dependencies.html":{}}}],["ngrxstoremodul",{"_index":171,"title":{"modules/NgrxStoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NgrxStoreModule.html":{},"modules.html":{},"overview.html":{}}}],["ngx",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["none",{"_index":570,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["noninfring",{"_index":753,"title":{},"body":{"license.html":{}}}],["notic",{"_index":741,"title":{},"body":{"license.html":{}}}],["null",{"_index":48,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["number",{"_index":328,"title":{},"body":{"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{}}}],["obj.id",{"_index":374,"title":{},"body":{"injectables/BlogService.html":{}}}],["object",{"_index":639,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":332,"title":{},"body":{"injectables/BlogService.html":{},"miscellaneous/functions.html":{}}}],["observable2promis",{"_index":343,"title":{},"body":{"injectables/BlogService.html":{},"components/PostComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["observable2promise(observ",{"_index":640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable2promise(this.activatedroute.param",{"_index":479,"title":{},"body":{"components/PostComponent.html":{}}}],["observable2promise(this.post",{"_index":350,"title":{},"body":{"injectables/BlogService.html":{}}}],["obtain",{"_index":719,"title":{},"body":{"license.html":{}}}],["og:descript",{"_index":524,"title":{},"body":{"injectables/SeoService.html":{}}}],["og:imag",{"_index":525,"title":{},"body":{"injectables/SeoService.html":{}}}],["og:site_nam",{"_index":522,"title":{},"body":{"injectables/SeoService.html":{}}}],["og:titl",{"_index":523,"title":{},"body":{"injectables/SeoService.html":{}}}],["og:typ",{"_index":520,"title":{},"body":{"injectables/SeoService.html":{}}}],["og:url",{"_index":526,"title":{},"body":{"injectables/SeoService.html":{}}}],["old",{"_index":644,"title":{},"body":{"miscellaneous/functions.html":{}}}],["oninit",{"_index":13,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{}}}],["oop",{"_index":457,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["option",{"_index":41,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":316,"title":{},"body":{"injectables/BlogService.html":{}}}],["otherwis",{"_index":764,"title":{},"body":{"license.html":{}}}],["out",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":772,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p&aacute;gina",{"_index":458,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["packag",{"_index":607,"title":{"dependencies.html":{}},"body":{}}],["pad",{"_index":288,"title":{},"body":{"components/BlogComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["page",{"_index":97,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["pageid",{"_index":466,"title":{},"body":{"components/PostComponent.html":{}}}],["pagenotfoundcompon",{"_index":96,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pages/about",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/blog/blog.compon",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/pag",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/post/post.compon",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["param",{"_index":243,"title":{},"body":{"classes/BaseHttpService.html":{},"injectables/BlogService.html":{},"injectables/SeoService.html":{}}}],["paramet",{"_index":37,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{}}}],["pars",{"_index":315,"title":{},"body":{"injectables/BlogService.html":{}}}],["particular",{"_index":751,"title":{},"body":{"license.html":{}}}],["pass",{"_index":641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["path",{"_index":73,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppRoutingModule.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{}}}],["pathmatch",{"_index":215,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":531,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["per",{"_index":336,"title":{},"body":{"injectables/BlogService.html":{}}}],["permiss",{"_index":714,"title":{},"body":{"license.html":{}}}],["permit",{"_index":735,"title":{},"body":{"license.html":{}}}],["person",{"_index":270,"title":{},"body":{"components/BlogComponent.html":{},"index.html":{},"license.html":{}}}],["pipe",{"_index":402,"title":{"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{}},"body":{"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes/",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/capitalize/capitalize.pip",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":413,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{}}}],["poco",{"_index":67,"title":{},"body":{"components/AboutMeComponent.html":{},"index.html":{}}}],["pointer",{"_index":554,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["popper.j",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["por",{"_index":682,"title":{},"body":{"index.html":{}}}],["portion",{"_index":744,"title":{},"body":{"license.html":{}}}],["post",{"_index":103,"title":{"interfaces/Post.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post'},{'nam",{"_index":100,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["post.compon",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["post.component.html",{"_index":465,"title":{},"body":{"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["post.component.scss",{"_index":464,"title":{},"body":{"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["post.component.t",{"_index":539,"title":{},"body":{"components/ThumbnailPostComponent.html":{},"coverage.html":{}}}],["post.component.ts:11",{"_index":541,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["post.cont",{"_index":375,"title":{},"body":{"injectables/BlogService.html":{}}}],["post.content.replace(titlegetregex",{"_index":401,"title":{},"body":{"injectables/BlogService.html":{}}}],["post.cov",{"_index":283,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{}}}],["post.dat",{"_index":491,"title":{},"body":{"components/PostComponent.html":{}}}],["post.thumbnail",{"_index":369,"title":{},"body":{"injectables/BlogService.html":{}}}],["post.titl",{"_index":399,"title":{},"body":{"injectables/BlogService.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["post/:id",{"_index":217,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["post/thumbnail",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{}}}],["postcompon",{"_index":99,"title":{"components/PostComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postcomponent.ngoninit",{"_index":487,"title":{},"body":{"components/PostComponent.html":{}}}],["posts(stat",{"_index":642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["posts.filter((post",{"_index":282,"title":{},"body":{"components/BlogComponent.html":{}}}],["posts.find((obj",{"_index":373,"title":{},"body":{"injectables/BlogService.html":{}}}],["posts.length",{"_index":351,"title":{},"body":{"injectables/BlogService.html":{}}}],["posts.slice(firstindex",{"_index":367,"title":{},"body":{"injectables/BlogService.html":{}}}],["postsperpag",{"_index":295,"title":{},"body":{"injectables/BlogService.html":{}}}],["prevent",{"_index":325,"title":{},"body":{"injectables/BlogService.html":{}}}],["principal",{"_index":691,"title":{},"body":{"index.html":{}}}],["prismj",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["privat",{"_index":60,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{}}}],["product",{"_index":338,"title":{},"body":{"injectables/BlogService.html":{},"miscellaneous/variables.html":{}}}],["programación",{"_index":671,"title":{},"body":{"index.html":{}}}],["promis",{"_index":46,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{},"miscellaneous/functions.html":{}}}],["properti",{"_index":22,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["protect",{"_index":229,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["provid",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":124,"title":{},"body":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{},"injectables/SeoService.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["publicado",{"_index":489,"title":{},"body":{"components/PostComponent.html":{}}}],["publicando",{"_index":669,"title":{},"body":{"index.html":{}}}],["publish",{"_index":730,"title":{},"body":{"license.html":{}}}],["pueden",{"_index":660,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":752,"title":{},"body":{"license.html":{}}}],["página",{"_index":448,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["que",{"_index":70,"title":{},"body":{"components/AboutMeComponent.html":{},"index.html":{}}}],["quién",{"_index":657,"title":{},"body":{"index.html":{}}}],["radiu",{"_index":551,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["rama",{"_index":690,"title":{},"body":{"index.html":{}}}],["re",{"_index":244,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["read",{"_index":646,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonli",{"_index":225,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BlogService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["redireccionando",{"_index":459,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["redirect",{"_index":443,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["redirectto",{"_index":214,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduc",{"_index":643,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ref=docs`).topromis",{"_index":249,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["refer",{"_index":404,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["regexp",{"_index":393,"title":{},"body":{"injectables/BlogService.html":{}}}],["reopsitori",{"_index":321,"title":{},"body":{"injectables/BlogService.html":{}}}],["repositorio",{"_index":651,"title":{},"body":{"index.html":{}}}],["reset",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["restrict",{"_index":724,"title":{},"body":{"license.html":{}}}],["result",{"_index":105,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":45,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"miscellaneous/functions.html":{}}}],["rgba(0",{"_index":548,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["right",{"_index":563,"title":{},"body":{"components/ThumbnailPostComponent.html":{},"license.html":{}}}],["root",{"_index":125,"title":{},"body":{"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"injectables/SeoService.html":{}}}],["root'},{'nam",{"_index":93,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["rout",{"_index":211,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/PageNotFoundComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":31,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{}}}],["router.url",{"_index":74,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{}}}],["routermodul",{"_index":212,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":210,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rxj",{"_index":340,"title":{},"body":{"injectables/BlogService.html":{},"dependencies.html":{}}}],["s.+\\n",{"_index":394,"title":{},"body":{"injectables/BlogService.html":{}}}],["saturate(200",{"_index":561,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["se",{"_index":674,"title":{},"body":{"index.html":{}}}],["sección",{"_index":678,"title":{},"body":{"index.html":{}}}],["second",{"_index":438,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["segundo",{"_index":461,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["sell",{"_index":734,"title":{},"body":{"license.html":{}}}],["sencillo",{"_index":667,"title":{},"body":{"index.html":{}}}],["seo",{"_index":33,"title":{"interfaces/Seo.html":{}},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"coverage.html":{}}}],["seo.settag",{"_index":64,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{}}}],["seoservic",{"_index":34,"title":{"injectables/SeoService.html":{}},"body":{"components/AboutMeComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{},"injectables/SeoService.html":{},"coverage.html":{},"overview.html":{}}}],["seri",{"_index":272,"title":{},"body":{"components/BlogComponent.html":{}}}],["servic",{"_index":261,"title":{},"body":{"components/BlogComponent.html":{}}}],["services/about",{"_index":56,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppModule.html":{}}}],["services/blog/blog.servic",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["services/seo/seo.servic",{"_index":55,"title":{},"body":{"components/AboutMeComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["set",{"_index":500,"title":{},"body":{"injectables/SeoService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["set_post",{"_index":535,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setinterv",{"_index":451,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["setpost",{"_index":345,"title":{"classes/SetPosts.html":{}},"body":{"injectables/BlogService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["setposts(post",{"_index":359,"title":{},"body":{"injectables/BlogService.html":{}}}],["settag",{"_index":494,"title":{},"body":{"injectables/SeoService.html":{}}}],["settags(config",{"_index":498,"title":{},"body":{"injectables/SeoService.html":{}}}],["shadow",{"_index":545,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["shall",{"_index":742,"title":{},"body":{"license.html":{}}}],["show",{"_index":471,"title":{},"body":{"components/PostComponent.html":{}}}],["show/hid",{"_index":267,"title":{},"body":{"components/BlogComponent.html":{}}}],["showbtnloadmorepost",{"_index":253,"title":{},"body":{"components/BlogComponent.html":{}}}],["sitio",{"_index":653,"title":{},"body":{"index.html":{}}}],["size",{"_index":565,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["sobr",{"_index":62,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlogComponent.html":{},"index.html":{}}}],["softwar",{"_index":275,"title":{},"body":{"components/BlogComponent.html":{},"license.html":{}}}],["solid",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["sort((a",{"_index":354,"title":{},"body":{"injectables/BlogService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"modules/NgrxStoreModule.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["soy",{"_index":658,"title":{},"body":{"index.html":{}}}],["spinner",{"_index":472,"title":{},"body":{"components/PostComponent.html":{}}}],["src/.../constants.class.t",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../posts.actions.t",{"_index":777,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../posts.reducer.t",{"_index":636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../utils.functions.t",{"_index":635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app.component.t",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.t",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/constants.class.t",{"_index":580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/thumbnail",{"_index":538,"title":{},"body":{"components/ThumbnailPostComponent.html":{},"coverage.html":{}}}],["src/app/functions/utils.funct",{"_index":344,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/functions/utils.functions.t",{"_index":584,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/models/post.model",{"_index":269,"title":{},"body":{"components/BlogComponent.html":{}}}],["src/app/models/post.model.t",{"_index":462,"title":{},"body":{"interfaces/Post.html":{},"coverage.html":{}}}],["src/app/models/seo.model.t",{"_index":492,"title":{},"body":{"interfaces/Seo.html":{},"coverage.html":{}}}],["src/app/modules/app",{"_index":209,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/modules/ngrx",{"_index":428,"title":{},"body":{"modules/NgrxStoreModule.html":{}}}],["src/app/ngrx",{"_index":221,"title":{},"body":{"interfaces/AppState.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/about",{"_index":9,"title":{},"body":{"components/AboutMeComponent.html":{},"coverage.html":{}}}],["src/app/pages/blog/blog.component.t",{"_index":250,"title":{},"body":{"components/BlogComponent.html":{},"coverage.html":{}}}],["src/app/pages/blog/blog.component.ts:16",{"_index":262,"title":{},"body":{"components/BlogComponent.html":{}}}],["src/app/pages/blog/blog.component.ts:18",{"_index":255,"title":{},"body":{"components/BlogComponent.html":{}}}],["src/app/pages/blog/blog.component.ts:32",{"_index":259,"title":{},"body":{"components/BlogComponent.html":{}}}],["src/app/pages/blog/blog.component.ts:47",{"_index":256,"title":{},"body":{"components/BlogComponent.html":{}}}],["src/app/pages/pag",{"_index":433,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/pages/post/post.component.t",{"_index":463,"title":{},"body":{"components/PostComponent.html":{},"coverage.html":{}}}],["src/app/pages/post/post.component.ts:18",{"_index":473,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/pages/post/post.component.ts:20",{"_index":470,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/pages/post/post.component.ts:22",{"_index":468,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/pages/post/post.component.ts:35",{"_index":469,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/pipes/",{"_index":418,"title":{},"body":{"pipes/EsDatePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize/capitalize.pipe.t",{"_index":403,"title":{},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize/capitalize.pipe.ts:11",{"_index":412,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["src/app/services/about",{"_index":108,"title":{},"body":{"injectables/AboutMeService.html":{},"coverage.html":{}}}],["src/app/services/bas",{"_index":226,"title":{},"body":{"classes/BaseHttpService.html":{},"coverage.html":{}}}],["src/app/services/blog/blog.service.t",{"_index":292,"title":{},"body":{"injectables/BlogService.html":{},"coverage.html":{}}}],["src/app/services/blog/blog.service.ts:112",{"_index":309,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:121",{"_index":312,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:130",{"_index":314,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:18",{"_index":324,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:20",{"_index":335,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:22",{"_index":330,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:24",{"_index":303,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:34",{"_index":320,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:47",{"_index":323,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:74",{"_index":319,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/blog/blog.service.ts:99",{"_index":305,"title":{},"body":{"injectables/BlogService.html":{}}}],["src/app/services/seo/seo.service.t",{"_index":493,"title":{},"body":{"injectables/SeoService.html":{},"coverage.html":{}}}],["src/app/services/seo/seo.service.ts:10",{"_index":497,"title":{},"body":{"injectables/SeoService.html":{}}}],["src/app/services/seo/seo.service.ts:17",{"_index":499,"title":{},"body":{"injectables/SeoService.html":{}}}],["src/environments/environment.prod.t",{"_index":602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":441,"title":{"index.html":{},"license.html":{}},"body":{"components/PageNotFoundComponent.html":{}}}],["state",{"_index":349,"title":{},"body":{"injectables/BlogService.html":{},"miscellaneous/functions.html":{}}}],["state.t",{"_index":223,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{}}}],["statement",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["ste",{"_index":650,"title":{},"body":{"index.html":{}}}],["store",{"_index":302,"title":{},"body":{"injectables/BlogService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}}}],["store.modul",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["store.module.t",{"_index":429,"title":{},"body":{"modules/NgrxStoreModule.html":{}}}],["store/actions/posts.act",{"_index":348,"title":{},"body":{"injectables/BlogService.html":{}}}],["store/actions/posts.actions.t",{"_index":528,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["store/actions/posts.actions.ts:14",{"_index":533,"title":{},"body":{"classes/SetPosts.html":{}}}],["store/actions/posts.actions.ts:15",{"_index":534,"title":{},"body":{"classes/SetPosts.html":{}}}],["store/actions/posts.actions.ts:23",{"_index":571,"title":{},"body":{"classes/UpdatePost.html":{}}}],["store/actions/posts.actions.ts:24",{"_index":572,"title":{},"body":{"classes/UpdatePost.html":{}}}],["store/actions/posts.actions.ts:32",{"_index":573,"title":{},"body":{"classes/UpdatePosts.html":{}}}],["store/actions/posts.actions.ts:33",{"_index":574,"title":{},"body":{"classes/UpdatePosts.html":{}}}],["store/app",{"_index":222,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BlogService.html":{},"coverage.html":{}}}],["store/reducers/posts.reduc",{"_index":431,"title":{},"body":{"modules/NgrxStoreModule.html":{}}}],["store/reducers/posts.reducer.t",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["storemodul",{"_index":430,"title":{},"body":{"modules/NgrxStoreModule.html":{}}}],["storemodule.forroot",{"_index":432,"title":{},"body":{"modules/NgrxStoreModule.html":{}}}],["string",{"_index":43,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["styleurl",{"_index":17,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["su",{"_index":672,"title":{},"body":{"index.html":{}}}],["subject",{"_index":737,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":732,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":743,"title":{},"body":{"license.html":{}}}],["substr(0",{"_index":507,"title":{},"body":{"injectables/SeoService.html":{}}}],["summari",{"_index":513,"title":{},"body":{"injectables/SeoService.html":{}}}],["super(http",{"_index":128,"title":{},"body":{"injectables/AboutMeService.html":{},"injectables/BlogService.html":{}}}],["support",{"_index":767,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":768,"title":{},"body":{"modules.html":{}}}],["s|\\n)/g",{"_index":396,"title":{},"body":{"injectables/BlogService.html":{}}}],["tabl",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":501,"title":{},"body":{"injectables/SeoService.html":{},"miscellaneous/variables.html":{}}}],["también",{"_index":664,"title":{},"body":{"index.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["text",{"_index":568,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["this._aboutm",{"_index":129,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["this._generatebasicpost(id",{"_index":379,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._generatebasicpost(nam",{"_index":353,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._getpostcover(id",{"_index":380,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._getpostcover(post.id",{"_index":371,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._getpostthumbnail(id",{"_index":381,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._getpostthumbnail(post.id",{"_index":370,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._parsepostdata(post",{"_index":377,"title":{},"body":{"injectables/BlogService.html":{}}}],["this._url",{"_index":246,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["this.aboutm",{"_index":78,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["this.aboutmeservice.getaboutdata",{"_index":80,"title":{},"body":{"components/AboutMeComponent.html":{}}}],["this.allpostsalreadyload",{"_index":361,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.blogservice.getpost(id",{"_index":480,"title":{},"body":{"components/PostComponent.html":{}}}],["this.blogservice.initializepost",{"_index":277,"title":{},"body":{"components/BlogComponent.html":{}}}],["this.blogservice.loadmorepost",{"_index":284,"title":{},"body":{"components/BlogComponent.html":{}}}],["this.blogservice.posts$.subscribe((post",{"_index":280,"title":{},"body":{"components/BlogComponent.html":{}}}],["this.currentpag",{"_index":365,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.getfile('about",{"_index":130,"title":{},"body":{"injectables/AboutMeService.html":{}}}],["this.getfile(`blog",{"_index":376,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.getfolder('blog')).map",{"_index":352,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.http.get",{"_index":245,"title":{},"body":{"classes/BaseHttpService.html":{}}}],["this.initializepost",{"_index":362,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.load",{"_index":488,"title":{},"body":{"components/PostComponent.html":{}}}],["this.loadmorepost",{"_index":360,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.meta.updatetag",{"_index":511,"title":{},"body":{"injectables/SeoService.html":{}}}],["this.pageid",{"_index":477,"title":{},"body":{"components/PostComponent.html":{}}}],["this.post",{"_index":281,"title":{},"body":{"components/BlogComponent.html":{},"components/PostComponent.html":{}}}],["this.post.cont",{"_index":484,"title":{},"body":{"components/PostComponent.html":{}}}],["this.post.thumbnail",{"_index":486,"title":{},"body":{"components/PostComponent.html":{}}}],["this.post.titl",{"_index":482,"title":{},"body":{"components/PostComponent.html":{}}}],["this.postsperpag",{"_index":364,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.router.navigatebyurl",{"_index":454,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this.router.url",{"_index":478,"title":{},"body":{"components/PostComponent.html":{}}}],["this.second",{"_index":452,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this.seo.settag",{"_index":483,"title":{},"body":{"components/PostComponent.html":{}}}],["this.showbtnloadmorepost",{"_index":276,"title":{},"body":{"components/BlogComponent.html":{}}}],["this.store.dispatch(new",{"_index":358,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.store.select('post",{"_index":333,"title":{},"body":{"injectables/BlogService.html":{}}}],["this.title.settitle(`ivánhdzd",{"_index":481,"title":{},"body":{"components/PostComponent.html":{}}}],["thumbnail",{"_index":102,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["thumbnail.jpg",{"_index":391,"title":{},"body":{"injectables/BlogService.html":{}}}],["thumbnailpostcompon",{"_index":101,"title":{"components/ThumbnailPostComponent.html":{}},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tien",{"_index":693,"title":{},"body":{"index.html":{}}}],["titl",{"_index":30,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"components/ThumbnailPostComponent.html":{}}}],["title.settitle('ivánhdzd",{"_index":61,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{}}}],["titlebeautifyregex",{"_index":395,"title":{},"body":{"injectables/BlogService.html":{}}}],["titlegetregex",{"_index":392,"title":{},"body":{"injectables/BlogService.html":{}}}],["titlegetregex.exec(post.cont",{"_index":398,"title":{},"body":{"injectables/BlogService.html":{}}}],["top",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["tort",{"_index":763,"title":{},"body":{"license.html":{}}}],["transform",{"_index":409,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{}}}],["transform(valu",{"_index":410,"title":{},"body":{"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{}}}],["transit",{"_index":556,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["trasnpilado",{"_index":696,"title":{},"body":{"index.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["tri",{"_index":77,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"components/PostComponent.html":{}}}],["true",{"_index":265,"title":{},"body":{"components/BlogComponent.html":{},"injectables/BlogService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["twitter:card",{"_index":512,"title":{},"body":{"injectables/SeoService.html":{}}}],["twitter:descript",{"_index":518,"title":{},"body":{"injectables/SeoService.html":{}}}],["twitter:imag",{"_index":519,"title":{},"body":{"injectables/SeoService.html":{}}}],["twitter:sit",{"_index":514,"title":{},"body":{"injectables/SeoService.html":{}}}],["twitter:titl",{"_index":516,"title":{},"body":{"injectables/SeoService.html":{}}}],["type",{"_index":40,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"interfaces/AppState.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"interfaces/Post.html":{},"components/PostComponent.html":{},"interfaces/Seo.html":{},"injectables/SeoService.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":775,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["un",{"_index":66,"title":{},"body":{"components/AboutMeComponent.html":{},"index.html":{}}}],["una",{"_index":271,"title":{},"body":{"components/BlogComponent.html":{}}}],["updat",{"_index":317,"title":{},"body":{"injectables/BlogService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{}}}],["update_post",{"_index":536,"title":{},"body":{"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatepost",{"_index":346,"title":{"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{}},"body":{"injectables/BlogService.html":{},"classes/SetPosts.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["updatepost(post",{"_index":378,"title":{},"body":{"injectables/BlogService.html":{}}}],["updatepost(st",{"_index":647,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updateposts(post",{"_index":372,"title":{},"body":{"injectables/BlogService.html":{}}}],["updateposts(st",{"_index":648,"title":{},"body":{"miscellaneous/functions.html":{}}}],["url",{"_index":234,"title":{},"body":{"classes/BaseHttpService.html":{},"injectables/BlogService.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":727,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["valu",{"_index":44,"title":{},"body":{"components/AboutMeComponent.html":{},"injectables/AboutMeService.html":{},"classes/BaseHttpService.html":{},"components/BlogComponent.html":{},"injectables/BlogService.html":{},"pipes/CapitalizePipe.html":{},"pipes/EsDatePipe.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"classes/SetPosts.html":{},"components/ThumbnailPostComponent.html":{},"classes/UpdatePost.html":{},"classes/UpdatePosts.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.charat(0).touppercas",{"_index":416,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["value.length",{"_index":414,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["value.slice(1",{"_index":417,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["var",{"_index":89,"title":{},"body":{"components/AboutMeComponent.html":{},"components/AppComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["variabl",{"_index":581,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ver",{"_index":661,"title":{},"body":{"index.html":{}}}],["void",{"_index":444,"title":{},"body":{"components/PageNotFoundComponent.html":{},"injectables/SeoService.html":{}}}],["warranti",{"_index":745,"title":{},"body":{"license.html":{}}}],["web",{"_index":654,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":543,"title":{},"body":{"components/ThumbnailPostComponent.html":{}}}],["whether",{"_index":761,"title":{},"body":{"license.html":{}}}],["white",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":289,"title":{},"body":{"components/BlogComponent.html":{},"components/ThumbnailPostComponent.html":{}}}],["window.scroll(0",{"_index":75,"title":{},"body":{"components/AboutMeComponent.html":{},"components/BlogComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PostComponent.html":{}}}],["without",{"_index":723,"title":{},"body":{"license.html":{}}}],["word",{"_index":411,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["y",{"_index":659,"title":{},"body":{"index.html":{}}}],["yyyi",{"_index":427,"title":{},"body":{"pipes/EsDatePipe.html":{}}}],["zone.j",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutMeComponent.html":{"url":"components/AboutMeComponent.html","title":"component - AboutMeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AboutMeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about-me/about-me.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about-me\n            \n\n            \n                styleUrls\n                ./about-me.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./about-me.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                aboutMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, router: Router, aboutMeService: AboutMeService, seo: SeoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about-me/about-me.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aboutMeService\n                                                  \n                                                        \n                                                                    AboutMeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                    SeoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/about-me/about-me.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Get about me string value.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            aboutMe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        aboutMe:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/about-me/about-me.component.ts:15\n                            \n                        \n\n                \n                    \n                        About me string content \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { SeoService } from '../../services/seo/seo.service';\nimport { AboutMeService } from '../../services/about-me/about-me.service';\n\n@Component({\n\tselector: 'app-about-me',\n\ttemplateUrl: './about-me.component.html',\n\tstyleUrls: ['./about-me.component.scss']\n})\nexport class AboutMeComponent implements OnInit {\n\t/** About me string content */\n\tpublic aboutMe: string = null;\n\n\tconstructor(title: Title, router: Router, private aboutMeService: AboutMeService, seo: SeoService) {\n\t\ttitle.setTitle('IvánHdzD - Sobre mí');\n\t\tseo.SetTags({\n\t\t\ttitle: 'Sobre mí',\n\t\t\tdescription: 'Un poco de lo que me apasiona hacer',\n\t\t\tpath: router.url\n\t\t});\n\t}\n\n\t/**\n\t * Get about me string value.\n\t */\n\tpublic async ngOnInit(): Promise {\n\t\twindow.scroll(0, 0);\n\t\ttry {\n\t\t\tthis.aboutMe = await this.aboutMeService.getAboutData();\n\t\t} catch (err) {\n\t\t\tconsole.warn('[ERROR] AboutMeComponent.ngOnInit:', err);\n\t\t}\n\t}\n}\n    \n\n    \n        \n\t\n\n    \n\n    \n                \n                    ./about-me.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t'\n    var COMPONENTS = [{'name': 'AboutMeComponent', 'selector': 'app-about-me'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ThumbnailPostComponent', 'selector': 'app-thumbnail-post'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutMeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AboutMeService.html":{"url":"injectables/AboutMeService.html","title":"injectable - AboutMeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AboutMeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/about-me/about-me.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _aboutMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getAboutData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/about-me/about-me.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            getAboutData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAboutData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/about-me/about-me.service.ts:21\n                            \n                        \n\n\n                \n                    \n                            Get about data from Github page.\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    (string) about me marketplace content.\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _aboutMe\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _aboutMe:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/about-me/about-me.service.ts:11\n                            \n                        \n\n                \n                    \n                        About me marketplace content \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { BaseHttpService } from '../base-http.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AboutMeService extends BaseHttpService {\n\t/** About me marketplace content */\n\tprivate _aboutMe: string = null;\n\n\tconstructor(protected http: HttpClient) {\n\t\tsuper(http);\n\t}\n\n\t/**\n\t * Get about data from Github page.\n\t * @returns (string) about me marketplace content.\n\t */\n\tpublic async getAboutData(): Promise {\n\t\tif (this._aboutMe) return this._aboutMe;\n\t\tthis._aboutMe = await this.GetFile('about-me');\n\t\treturn this._aboutMe;\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent { }\n    \n\n    \n        \n\t\n\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\tBLOG\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tSOBRE MI\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tDOCS\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\tGITHUB\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n\n\t\n\n\n\n\tIv&aacute;nHdzD &middot; 2019\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                #router-container {\n\tmargin-top: 3.5rem;\n\tmin-height: calc(100vh - 14rem);\n}\n\n.active {\n\tborder-bottom: white 2px solid !important;\n\tcolor: white !important;\n}\n\nfooter {\n\tcolor: white;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBLOG\t\t\t\t\t\t\t\t\t\t\t\t\tSOBRE MI\t\t\t\t\t\t\t\t\t\t\t\t\tDOCS\t\t\t\t\t\t\t\t\t\t\t\t\tGITHUB\t\t\t\t\t\t\t\t\t\t\t\tIvánHdzD · 2019'\n    var COMPONENTS = [{'name': 'AboutMeComponent', 'selector': 'app-about-me'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ThumbnailPostComponent', 'selector': 'app-thumbnail-post'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutMeComponent\n\nAboutMeComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutMeComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBlogComponent\n\nBlogComponent\n\nAppModule -->\n\nBlogComponent->AppModule\n\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\nAppModule -->\n\nCapitalizePipe->AppModule\n\n\n\n\n\nEsDatePipe\n\nEsDatePipe\n\nAppModule -->\n\nEsDatePipe->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nThumbnailPostComponent\n\nThumbnailPostComponent\n\nAppModule -->\n\nThumbnailPostComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgrxStoreModule\n\nNgrxStoreModule\n\nAppModule -->\n\nNgrxStoreModule->AppModule\n\n\n\n\n\nAboutMeService\n\nAboutMeService\n\nAppModule -->\n\nAboutMeService->AppModule\n\n\n\n\n\nBlogService\n\nBlogService\n\nAppModule -->\n\nBlogService->AppModule\n\n\n\n\n\nSeoService\n\nSeoService\n\nAppModule -->\n\nSeoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutMeComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BlogComponent\n                        \n                        \n                            CapitalizePipe\n                        \n                        \n                            EsDatePipe\n                        \n                        \n                            PageNotFoundComponent\n                        \n                        \n                            PostComponent\n                        \n                        \n                            ThumbnailPostComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AboutMeService\n                        \n                        \n                            BlogService\n                        \n                        \n                            SeoService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgrxStoreModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { DisqusModule } from 'ngx-disqus';\n\nimport { AppRoutingModule } from './modules/app-routing.module';\nimport { NgrxStoreModule } from './modules/ngrx-store.module';\n\nimport { SeoService } from './services/seo/seo.service';\nimport { BlogService } from './services/blog/blog.service';\nimport { AboutMeService } from './services/about-me/about-me.service';\n\nimport { EsDatePipe } from './pipes/es-date/es-date.pipe';\nimport { CapitalizePipe } from './pipes/capitalize/capitalize.pipe';\n\nimport { AppComponent } from './app.component';\n\nimport { AboutMeComponent } from './pages/about-me/about-me.component';\nimport { BlogComponent } from './pages/blog/blog.component';\nimport { PostComponent } from './pages/post/post.component';\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\n\nimport { ThumbnailPostComponent } from './components/thumbnail-post/thumbnail-post.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent,\n\t\tEsDatePipe,\n\t\tCapitalizePipe,\n\t\tAboutMeComponent,\n\t\tBlogComponent,\n\t\tPostComponent,\n\t\tPageNotFoundComponent,\n\t\tThumbnailPostComponent,\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tMarkdownModule.forRoot(),\n\t\tDisqusModule.forRoot('ivanhdzd'),\n\t\tNgrxStoreModule,\n\t\tAppRoutingModule\n\t],\n\tproviders: [SeoService, BlogService, AboutMeService],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutMeComponent } from '../pages/about-me/about-me.component';\nimport { BlogComponent } from '../pages/blog/blog.component';\nimport { PostComponent } from '../pages/post/post.component';\nimport { PageNotFoundComponent } from '../pages/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: 'blog', pathMatch: 'full' },\n\t{ path: 'blog', component: BlogComponent },\n\t{ path: 'post/:id', component: PostComponent },\n\t{ path: 'sobre-mi', component: AboutMeComponent },\n\t{ path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ngrx-store/app-state.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        posts\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        posts\n                                    \n                                \n                                \n                                    \n                                        posts:     Post[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Post[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Post } from '../models/post.model';\n\nexport interface AppState {\n\treadonly posts: Post[];\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseHttpService.html":{"url":"classes/BaseHttpService.html","title":"class - BaseHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/base-http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                GetFile\n                            \n                            \n                                    Protected\n                                    Async\n                                GetFolder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/base-http.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.github.com/repos/ivanhdzd/ivanhdzd.github.io/contents/docs'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/base-http.service.ts:5\n                            \n                        \n\n                \n                    \n                        URL to get docs file contents \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            GetFile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetFile(path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/base-http.service.ts:14\n                            \n                        \n\n\n                \n                    \n                            Get file content by it path name.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (string) name to get file content.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    (string) file content.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Async\n                            GetFolder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetFolder(path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/base-http.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            Get directory content basic data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (string) name to get directory array content.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    (any[]) folder content data array.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\n\nexport class BaseHttpService {\n\t/** URL to get docs file contents */\n\tprivate _url: string = 'https://api.github.com/repos/ivanhdzd/ivanhdzd.github.io/contents/docs';\n\n\tconstructor(protected http: HttpClient) { }\n\n\t/**\n\t * Get file content by it path name.\n\t * @param path (string) name to get file content.\n\t * @returns (string) file content.\n\t */\n\tprotected async GetFile(path: string): Promise {\n\t\tconst res: any = await this.http.get(`${ this._url }/${ path }/index.md?ref=docs`).toPromise();\n\t\treturn decodeURIComponent(escape(atob(res['content'])));\n\t}\n\n\t/**\n\t * Get directory content basic data.\n\t * @param path (string) name to get directory array content.\n\t * @returns (any[]) folder content data array.\n\t */\n\tprotected async GetFolder(path: string): Promise {\n\t\treturn this.http.get(`${ this._url }/${ path }?ref=docs`).toPromise();\n\t}\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlogComponent.html":{"url":"components/BlogComponent.html","title":"component - BlogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BlogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/blog/blog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-blog\n            \n\n            \n                styleUrls\n                ./blog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./blog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                posts\n                            \n                            \n                                    Public\n                                showBtnLoadMorePosts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                LoadMorePosts\n                            \n                            \n                                    Public\n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, router: Router, blogService: BlogService, seo: SeoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/blog/blog.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blogService\n                                                  \n                                                        \n                                                                    BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                    SeoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            LoadMorePosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        LoadMorePosts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/blog/blog.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            Load more posts data.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/blog/blog.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Load posts list from blog service.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/blog/blog.component.ts:16\n                            \n                        \n\n                \n                    \n                        Posts list instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            showBtnLoadMorePosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showBtnLoadMorePosts:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/blog/blog.component.ts:18\n                            \n                        \n\n                \n                    \n                        Flag to show/hide load more posts button \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { SeoService } from '../../services/seo/seo.service';\nimport { BlogService } from '../../services/blog/blog.service';\nimport { Post } from 'src/app/models/post.model';\n\n@Component({\n\tselector: 'app-blog',\n\ttemplateUrl: './blog.component.html',\n\tstyleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\t/** Posts list instance */\n\tpublic posts: Post[] = null;\n\t/** Flag to show/hide load more posts button */\n\tpublic showBtnLoadMorePosts: boolean = true;\n\n\tconstructor(title: Title, router: Router, private blogService: BlogService, seo: SeoService) {\n\t\ttitle.setTitle('IvánHdzD - Blog');\n\t\tseo.SetTags({\n\t\t\ttitle: 'Mi blog personal',\n\t\t\tdescription: 'Una serie de artículos sobre desarrollo de software',\n\t\t\tpath: router.url\n\t\t});\n\t}\n\n\t/**\n\t * Load posts list from blog service.\n\t */\n\tpublic async ngOnInit(): Promise {\n\t\twindow.scroll(0, 0);\n\t\ttry {\n\t\t\tthis.showBtnLoadMorePosts = await this.blogService.InitializePosts();\n\t\t} catch (err) {\n\t\t\tconsole.warn('[ERROR] BlogComponent.ngOnInit:', err);\n\t\t} finally {\n\t\t\tthis.blogService.posts$.subscribe((posts: Post[]) =>\n\t\t\t\tthis.posts = posts.filter((post: Post) => !!post.cover));\n\t\t}\n\t}\n\n\t/**\n\t * Load more posts data.\n\t */\n\tpublic async LoadMorePosts(): Promise {\n\t\ttry {\n\t\t\tthis.showBtnLoadMorePosts = await this.blogService.LoadMorePosts();\n\t\t} catch (err) {\n\t\t\tconsole.warn('[ERROR] BlogComponent.LoadMorePosts:', err);\n\t\t}\n\t}\n}\n    \n\n    \n        Blog\n\n\t\n\t\t\n\t\t\t\n\t\t\n\t\n\n\n\tCargar m&aacute;s posts\n\n    \n\n    \n                \n                    ./blog.component.scss\n                \n                .thumbnail-post {\n    padding: 0;\n    width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Blog\t\t\t\t\t\t\t\t\t\tCargar más posts'\n    var COMPONENTS = [{'name': 'AboutMeComponent', 'selector': 'app-about-me'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ThumbnailPostComponent', 'selector': 'app-thumbnail-post'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BlogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlogService.html":{"url":"injectables/BlogService.html","title":"injectable - BlogService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BlogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/blog/blog.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                allPostsAlreadyLoaded\n                            \n                            \n                                    Private\n                                currentPage\n                            \n                            \n                                    Public\n                                    Readonly\n                                posts$\n                            \n                            \n                                    Private\n                                    Readonly\n                                postsPerPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _GenerateBasicPost\n                            \n                            \n                                    Private\n                                _GetPostCover\n                            \n                            \n                                    Private\n                                _GetPostThumbnail\n                            \n                            \n                                    Private\n                                _ParsePostData\n                            \n                            \n                                    Public\n                                    Async\n                                GetPost\n                            \n                            \n                                    Public\n                                    Async\n                                InitializePosts\n                            \n                            \n                                    Public\n                                    Async\n                                LoadMorePosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/blog/blog.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _GenerateBasicPost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _GenerateBasicPost(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:99\n                            \n                        \n\n\n                \n                    \n                            Generate a post with it basic data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (string) post ID to generate basic post data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Post\n\n                            \n                                \n                                    (Post) post with it basic data.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _GetPostCover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _GetPostCover(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Generate post cover URL by it ID.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (string) post ID to generate cover URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    (string) post cover URL.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _GetPostThumbnail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _GetPostThumbnail(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Generate post thumbnail URL by it ID.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (string) post ID to generate thumbnail URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    (string) post thumbnail URL.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _ParsePostData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        _ParsePostData(post: Post)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Parse post data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        post\n                                                        \n                                                                    Post\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Post) to try to get original name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Post\n\n                            \n                                \n                                    (Post) post with title updated.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            GetPost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        GetPost(id: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Get post full data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (string) post ID to can get it data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    (Post) post data.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            InitializePosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        InitializePosts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Get posts list from Github reopsitory.\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    (boolean) true if there more posts to load, else return false.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            LoadMorePosts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        LoadMorePosts()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Load more posts basic data (thumbnail).\n\n\n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    (boolean) true if there more posts to load, else return false.\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            allPostsAlreadyLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allPostsAlreadyLoaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:18\n                            \n                        \n\n                \n                    \n                        Flag to prevent to try to load more posts that already exists \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:22\n                            \n                        \n\n                \n                    \n                        Current page to load posts thumbnail \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            posts$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        posts$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.store.select('posts')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:24\n                            \n                        \n\n                \n                    \n                        Posts list observable \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            postsPerPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        postsPerPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 12\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/blog/blog.service.ts:20\n                            \n                        \n\n                \n                    \n                        Posts per page readonly constant value, production value: 12 \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { BaseHttpService } from '../base-http.service';\nimport { IMG_BASE_URL } from '../../classes/constants.class';\nimport { observable2promise } from 'src/app/functions/utils.functions';\nimport { SetPosts, UpdatePost, UpdatePosts } from '../../ngrx-store/actions/posts.actions';\nimport { AppState } from '../../ngrx-store/app-state';\nimport { Post } from '../../models/post.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class BlogService extends BaseHttpService {\n\t/** Flag to prevent to try to load more posts that already exists */\n\tprivate allPostsAlreadyLoaded: boolean = false;\n\t/** Posts per page readonly constant value, production value: 12 */\n\tprivate readonly postsPerPage: number = 12;\n\t/** Current page to load posts thumbnail */\n\tprivate currentPage: number = 1;\n\t/** Posts list observable */\n\tpublic readonly posts$: Observable = this.store.select('posts');\n\n\tconstructor(protected http: HttpClient, private store: Store) {\n\t\tsuper(http);\n\t}\n\n\t/**\n\t * Get posts list from Github reopsitory.\n\t * @returns (boolean) true if there more posts to load, else return false.\n\t */\n\tpublic async InitializePosts(): Promise {\n\t\tlet posts: Post[] = await observable2promise(this.posts$);\n\t\tif (posts && posts.length > 0) return;\n\t\tposts = (await this.GetFolder('blog')).map(({ name }) => this._GenerateBasicPost(name))\n\t\t\t.sort((a: Post, b: Post) => +b.date - +a.date);\n\t\tthis.store.dispatch(new SetPosts(posts));\n\t\treturn this.LoadMorePosts();\n\t}\n\n\t/**\n\t * Load more posts basic data (thumbnail).\n\t * @returns (boolean) true if there more posts to load, else return false.\n\t */\n\tpublic async LoadMorePosts(): Promise {\n\t\tif (this.allPostsAlreadyLoaded) return false;\n\t\tlet posts: Post[] = await observable2promise(this.posts$);\n\t\tif (!posts || posts.length === 0) {\n\t\t\tawait this.InitializePosts();\n\t\t\treturn this.LoadMorePosts();\n\t\t}\n\t\tlet lastIndex: number = this.postsPerPage * this.currentPage++;\n\t\tconst firstIndex: number = lastIndex - this.postsPerPage;\n\t\tif (lastIndex >= posts.length) {\n\t\t\tlastIndex = posts.length;\n\t\t\tthis.allPostsAlreadyLoaded = true;\n\t\t}\n\t\tposts = posts.slice(firstIndex, lastIndex).map((post: Post) => {\n\t\t\tpost.thumbnail = this._GetPostThumbnail(post.id);\n\t\t\tpost.cover = this._GetPostCover(post.id);\n\t\t\treturn post;\n\t\t});\n\t\tthis.store.dispatch(new UpdatePosts(posts));\n\t\treturn !this.allPostsAlreadyLoaded;\n\t}\n\n\t/**\n\t * Get post full data.\n\t * @param id (string) post ID to can get it data.\n\t * @returns (Post) post data.\n\t */\n\tpublic async GetPost(id: string): Promise {\n\t\tlet post: Post = null;\n\t\tconst posts: Post[] = await observable2promise(this.posts$);\n\t\tif (posts) {\n\t\t\tpost = posts.find((obj: Post) => id === obj.id);\n\t\t\tif (!post) return null;\n\t\t\tif (post.content) return post;\n\t\t\tpost.content = await this.GetFile(`blog/${ id }`);\n\t\t\tpost = this._ParsePostData(post);\n\t\t\tthis.store.dispatch(new UpdatePost(post));\n\t\t} else {\n\t\t\tpost = this._GenerateBasicPost(id);\n\t\t\tpost.cover = this._GetPostCover(id);\n\t\t\tpost.thumbnail = this._GetPostThumbnail(id);\n\t\t\tpost.content = await this.GetFile(`blog/${ id }`);\n\t\t\tpost = this._ParsePostData(post);\n\t\t}\n\t\treturn post;\n\t}\n\n\t/**\n\t * Generate a post with it basic data.\n\t * @param id (string) post ID to generate basic post data.\n\t * @returns (Post) post with it basic data.\n\t */\n\tprivate _GenerateBasicPost(id: string): Post {\n\t\treturn {\n\t\t\tdate: new Date(id.replace(id.split(/^\\d{4}-\\d{2}-\\d{2}/).join(''), '')),\n\t\t\ttitle: id.split(/^\\d{4}-\\d{2}-\\d{2}-/).join('').replace(/-/g, ' '),\n\t\t\tid\n\t\t};\n\t}\n\n\t/**\n\t * Generate post cover URL by it ID.\n\t * @param id (string) post ID to generate cover URL.\n\t * @returns (string) post cover URL.\n\t */\n\tprivate _GetPostCover(id: string): string {\n\t\treturn `${ IMG_BASE_URL }/blog/${ id }/cover.jpg`;\n\t}\n\n\t/**\n\t * Generate post thumbnail URL by it ID.\n\t * @param id (string) post ID to generate thumbnail URL.\n\t * @returns (string) post thumbnail URL.\n\t */\n\tprivate _GetPostThumbnail(id: string): string {\n\t\treturn `${ IMG_BASE_URL }/blog/${ id }/thumbnail.jpg`;\n\t}\n\n\t/**\n\t * Parse post data.\n\t * @param post (Post) to try to get original name.\n\t * @returns (Post) post with title updated.\n\t */\n\tprivate _ParsePostData(post: Post): Post {\n\t\tconst titleGetRegex: RegExp = /^#\\s.+\\n/;\n\t\tconst titleBeautifyRegex: RegExp = /(#\\s|\\n)/g;\n\t\tconst arr = titleGetRegex.exec(post.content);\n\t\tif (!arr) return post;\n\t\tpost.title = arr[0].replace(titleBeautifyRegex, '');\n\t\tpost.content = post.content.replace(titleGetRegex, '');\n\t\treturn post;\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizePipe.html":{"url":"pipes/CapitalizePipe.html","title":"pipe - CapitalizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/capitalize/capitalize.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Reference:\nhttp://codersvibe.com/create-capitalize-string-pipe-angular-2/\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalize\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(value: string, words: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/capitalize/capitalize.pipe.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        words\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Reference:\n * http://codersvibe.com/create-capitalize-string-pipe-angular-2/\n */\n@Pipe({\n\tname: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\tpublic transform(value: string, words: boolean): string {\n\t\tif (value) {\n\t\t\tif (value.length  first.toLocaleUpperCase());\n\t\t\telse return value.charAt(0).toUpperCase() + value.slice(1);\n\t\t}\n\t\treturn value;\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EsDatePipe.html":{"url":"pipes/EsDatePipe.html","title":"pipe - EsDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EsDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/es-date/es-date.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        esDate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pipes/es-date/es-date.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport * as moment from 'moment';\n\n@Pipe({\n\tname: 'esDate'\n})\nexport class EsDatePipe implements PipeTransform {\n\tpublic transform(value: string): string {\n\t\treturn moment(new Date(value)).format('dddd D [de] MMMM [de] YYYY');\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgrxStoreModule.html":{"url":"modules/NgrxStoreModule.html","title":"module - NgrxStoreModule","body":"\n                   \n\n\n\n\n    Modules\n    NgrxStoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/ngrx-store.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\n\nimport { posts } from '../ngrx-store/reducers/posts.reducer';\n\n@NgModule({\n\timports: [StoreModule.forRoot({ posts })]\n})\nexport class NgrxStoreModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/page-not-found/page-not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                styleUrls\n                ./page-not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                seconds\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/page-not-found/page-not-found.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            Start seconds decrement to redirect to root route.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            seconds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        seconds:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/page-not-found/page-not-found.component.ts:12\n                            \n                        \n\n                \n                    \n                        Seconds count \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\n\n@Component({\n\tselector: 'app-page-not-found',\n\ttemplateUrl: './page-not-found.component.html',\n\tstyleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\t/** Seconds count */\n\tpublic seconds: number = 5;\n\n\tconstructor(title: Title, private router: Router) {\n\t\ttitle.setTitle('IvánHdzD - 404 página no encontrada!');\n\t}\n\n\t/**\n\t * Start seconds decrement to redirect to root route.\n\t */\n\tpublic ngOnInit(): void {\n\t\twindow.scroll(0, 0);\n\t\tconst interval = setInterval(() => {\n\t\t\tif (this.seconds > 0) return --this.seconds;\n\t\t\tclearInterval(interval);\n\t\t\tthis.router.navigateByUrl('/');\n\t\t}, 1000);\n\t}\n}\n    \n\n    \n        \n\t\n\t\tError 404\n\t\n\tOops! P&aacute;gina no encontrada.\n\t 0\">\n\t\tRedireccionando en {{ seconds }} {{ seconds != 1 ? 'segundos' : 'segundo' }}.\n\t\n\n    \n\n    \n                \n                    ./page-not-found.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\tError 404\t\tOops! Página no encontrada.\t 0\">\t\tRedireccionando en {{ seconds }} {{ seconds != 1 ? \\'segundos\\' : \\'segundo\\' }}.\t'\n    var COMPONENTS = [{'name': 'AboutMeComponent', 'selector': 'app-about-me'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ThumbnailPostComponent', 'selector': 'app-thumbnail-post'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Post.html":{"url":"interfaces/Post.html","title":"interface - Post","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Post\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/post.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                            Optional\n                                        cover\n                                \n                                \n                                        date\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        thumbnail\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cover\n                                    \n                                \n                                \n                                    \n                                        cover:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                    \n                                \n                                \n                                    \n                                        thumbnail:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Post {\n\tid: string;\n\tdate: Date;\n\ttitle: string;\n\tcover?: string;\n\tthumbnail?: string;\n\tcontent?: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/post/post.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                pageID\n                            \n                            \n                                    Public\n                                post\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, router: Router, activatedRoute: ActivatedRoute, blogService: BlogService, seo: SeoService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/post/post.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        blogService\n                                                  \n                                                        \n                                                                    BlogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        seo\n                                                  \n                                                        \n                                                                    SeoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Async\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/pages/post/post.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Load current post data.\n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/post/post.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flag to show spinner while post is loading \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/post/post.component.ts:18\n                            \n                        \n\n                \n                    \n                        Page ID for disqus configuration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            post\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        post:     Post\n\n                    \n                \n                    \n                        \n                            Type :     Post\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/post/post.component.ts:22\n                            \n                        \n\n                \n                    \n                        Current post data \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\n\nimport { SeoService } from '../../services/seo/seo.service';\nimport { BlogService } from '../../services/blog/blog.service';\nimport { observable2promise } from '../../functions/utils.functions';\nimport { BASE_HREF } from '../../classes/constants.class';\nimport { Post } from '../../models/post.model';\n\n@Component({\n\tselector: 'app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit {\n\t/** Page ID for disqus configuration */\n\tpublic pageID: string = null;\n\t/** Flag to show spinner while post is loading */\n\tpublic loading: boolean = false;\n\t/** Current post data */\n\tpublic post: Post = null;\n\n\tconstructor(\n\t\tprivate title: Title,\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate blogService: BlogService,\n\t\tprivate seo: SeoService\n\t) { }\n\n\t/**\n\t * Load current post data.\n\t */\n\tpublic async ngOnInit(): Promise {\n\t\tthis.pageID = `${ BASE_HREF }${ this.router.url }`;\n\t\twindow.scroll(0, 0);\n\t\ttry {\n\t\t\tconst { id } = await observable2promise(this.activatedRoute.params);\n\t\t\tthis.post = await this.blogService.GetPost(id);\n\t\t\tthis.title.setTitle(`IvánHdzD - ${ this.post.title }`);\n\t\t\tthis.seo.SetTags({\n\t\t\t\ttitle: this.post.title,\n\t\t\t\tdescription: this.post.content,\n\t\t\t\timage: this.post.thumbnail,\n\t\t\t\tpath: this.router.url\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.warn('[ERROR] PostComponent.ngOnInit:', err);\n\t\t} finally {\n\t\t\tthis.loading = false;\n\t\t}\n\t}\n}\n    \n\n    \n        \n\t\n\t\t\n\t\t\t\n\t\t\n\t\t{{ post.title | capitalize }}\n\t\tPublicado el {{ post.date | esDate }}\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t{{ post.title | capitalize }}\t\tPublicado el {{ post.date | esDate }}\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AboutMeComponent', 'selector': 'app-about-me'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ThumbnailPostComponent', 'selector': 'app-thumbnail-post'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Seo.html":{"url":"interfaces/Seo.html","title":"interface - Seo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Seo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/seo.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                            Optional\n                                        image\n                                \n                                \n                                        path\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                    \n                                \n                                \n                                    \n                                        image:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Seo {\n\ttitle: string;\n\tdescription: string;\n\timage?: string;\n\tpath: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeoService.html":{"url":"injectables/SeoService.html","title":"injectable - SeoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SeoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/seo/seo.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                SetTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: Meta)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/seo/seo.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                    Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            SetTags\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        SetTags(config: Seo)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/seo/seo.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Set SEO data into meta tags.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    Seo\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Seo) data to set into meta tags.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Meta } from '@angular/platform-browser';\n\nimport { BASE_HREF } from '../../classes/constants.class';\nimport { Seo } from '../../models/seo.model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SeoService {\n\tconstructor(private meta: Meta) { }\n\n\t/**\n\t * Set SEO data into meta tags.\n\t * @param config (Seo) data to set into meta tags.\n\t */\n\tpublic SetTags(config: Seo): void {\n\t\tconfig.description = `${ config.description.replace(/^\\n/, '').substr(0, 128) }...`;\n\t\tif (!config.image) config.image = `${ BASE_HREF }/assets/img/ivanhdzd.jpg`;\n\n\t\tthis.meta.updateTag({ name: 'description', content: config.description });\n\t\tthis.meta.updateTag({ name: 'twitter:card', content: 'summary' });\n\t\tthis.meta.updateTag({ name: 'twitter:site', content: '@IvanHdzD' });\n\t\tthis.meta.updateTag({ name: 'twitter:title', content: config.title });\n\t\tthis.meta.updateTag({ name: 'twitter:description', content: config.description });\n\t\tthis.meta.updateTag({ name: 'twitter:image', content: config.image });\n\t\tthis.meta.updateTag({ property: 'og:type', content: 'article' });\n\t\tthis.meta.updateTag({ property: 'og:site_name', content: 'IvánHdzD' });\n\t\tthis.meta.updateTag({ property: 'og:title', content: config.title });\n\t\tthis.meta.updateTag({ property: 'og:description', content: config.description });\n\t\tthis.meta.updateTag({ property: 'og:image', content: config.image });\n\t\tthis.meta.updateTag({ property: 'og:url', content: `${ BASE_HREF }${ config.path }` });\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetPosts.html":{"url":"classes/SetPosts.html","title":"class - SetPosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetPosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ngrx-store/actions/posts.actions.ts\n        \n\n            \n                Description\n            \n            \n                Ngrx store action to set a posts array.\nIt needs a Post array in a constructor parameter.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Post[])\n                    \n                \n                        \n                            \n                                Defined in src/app/ngrx-store/actions/posts.actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Post[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ngrx-store/actions/posts.actions.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : SET_POSTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ngrx-store/actions/posts.actions.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Post } from '../../models/post.model';\n\nexport const SET_POSTS: string = '[POST] SET_POSTS';\nexport const UPDATE_POST: string = '[POST] UPDATE_POST';\nexport const UPDATE_POSTS: string = '[POST] UPDATE_POSTS';\n\n/**\n * Ngrx store action to set a posts array.\n * It needs a Post array in a constructor parameter.\n */\nexport class SetPosts implements Action {\n\tpublic readonly type: string = SET_POSTS;\n\tconstructor(public payload: Post[]) { }\n}\n\n/**\n * Ngrx store action to update a post.\n * It needs a Post in a constructor parameter.\n */\nexport class UpdatePost implements Action {\n\tpublic readonly type: string = UPDATE_POST;\n\tconstructor(public payload: Post) { }\n}\n\n/**\n * Ngrx store action to update a post.\n * It needs a Post in a constructor parameter.\n */\nexport class UpdatePosts implements Action {\n\tpublic readonly type: string = UPDATE_POSTS;\n\tconstructor(public payload: Post[]) { }\n}\n\nexport type Actions = SetPosts | UpdatePost | UpdatePosts;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailPostComponent.html":{"url":"components/ThumbnailPostComponent.html","title":"component - ThumbnailPostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailPostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/thumbnail-post/thumbnail-post.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thumbnail-post\n            \n\n            \n                styleUrls\n                ./thumbnail-post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail-post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                post\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        post\n                    \n                    \n                            \n                            Type :    Post\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/components/thumbnail-post/thumbnail-post.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { Post } from '../../models/post.model';\n\n@Component({\n\tselector: 'app-thumbnail-post',\n\ttemplateUrl: './thumbnail-post.component.html',\n\tstyleUrls: ['./thumbnail-post.component.scss']\n})\nexport class ThumbnailPostComponent  {\n\t@Input() post: Post = null;\n}\n    \n\n    \n        \n\t\n\t\t\n\t\t\n\t\t\t{{ post.title | capitalize }}\n\t\t\n\t\n\n    \n\n    \n                \n                    ./thumbnail-post.component.scss\n                \n                #card {\n\t-webkit-box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.5);\n    -moz-box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.5);\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.5);\n    border-radius: 1rem;\n    cursor: pointer;\n    max-width: 100%;\n    margin: 1rem;\n\ttransition: 0.2s all;\n\t&:hover {\n\t\tmargin: 0.5rem;\n\t\t#image {\n\t\t\tfilter: saturate(200%);\n\t\t}\n\t}\n}\n\n#container {\n    max-width: 100%;\n    padding: 1rem;\n}\n\n#image {\n    border-top-left-radius: 1rem;\n    border-top-right-radius: 1rem;\n    transition: 0.2s all;\n    width: 100%;\n}\n\n#title {\n    font-size: 1.5rem;\n    height: 7rem;\n    max-width: 100%;\n}\n\na {\n\ttext-decoration: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t{{ post.title | capitalize }}\t\t\t'\n    var COMPONENTS = [{'name': 'AboutMeComponent', 'selector': 'app-about-me'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BlogComponent', 'selector': 'app-blog'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PostComponent', 'selector': 'app-post'},{'name': 'ThumbnailPostComponent', 'selector': 'app-thumbnail-post'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailPostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePost.html":{"url":"classes/UpdatePost.html","title":"class - UpdatePost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ngrx-store/actions/posts.actions.ts\n        \n\n            \n                Description\n            \n            \n                Ngrx store action to update a post.\nIt needs a Post in a constructor parameter.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Post)\n                    \n                \n                        \n                            \n                                Defined in src/app/ngrx-store/actions/posts.actions.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Post\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Post\n\n                    \n                \n                    \n                        \n                            Type :     Post\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ngrx-store/actions/posts.actions.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : UPDATE_POST\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ngrx-store/actions/posts.actions.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Post } from '../../models/post.model';\n\nexport const SET_POSTS: string = '[POST] SET_POSTS';\nexport const UPDATE_POST: string = '[POST] UPDATE_POST';\nexport const UPDATE_POSTS: string = '[POST] UPDATE_POSTS';\n\n/**\n * Ngrx store action to set a posts array.\n * It needs a Post array in a constructor parameter.\n */\nexport class SetPosts implements Action {\n\tpublic readonly type: string = SET_POSTS;\n\tconstructor(public payload: Post[]) { }\n}\n\n/**\n * Ngrx store action to update a post.\n * It needs a Post in a constructor parameter.\n */\nexport class UpdatePost implements Action {\n\tpublic readonly type: string = UPDATE_POST;\n\tconstructor(public payload: Post) { }\n}\n\n/**\n * Ngrx store action to update a post.\n * It needs a Post in a constructor parameter.\n */\nexport class UpdatePosts implements Action {\n\tpublic readonly type: string = UPDATE_POSTS;\n\tconstructor(public payload: Post[]) { }\n}\n\nexport type Actions = SetPosts | UpdatePost | UpdatePosts;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePosts.html":{"url":"classes/UpdatePosts.html","title":"class - UpdatePosts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePosts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ngrx-store/actions/posts.actions.ts\n        \n\n            \n                Description\n            \n            \n                Ngrx store action to update a post.\nIt needs a Post in a constructor parameter.\n\n            \n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Post[])\n                    \n                \n                        \n                            \n                                Defined in src/app/ngrx-store/actions/posts.actions.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Post[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     Post[]\n\n                    \n                \n                    \n                        \n                            Type :     Post[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ngrx-store/actions/posts.actions.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : UPDATE_POSTS\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ngrx-store/actions/posts.actions.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport { Post } from '../../models/post.model';\n\nexport const SET_POSTS: string = '[POST] SET_POSTS';\nexport const UPDATE_POST: string = '[POST] UPDATE_POST';\nexport const UPDATE_POSTS: string = '[POST] UPDATE_POSTS';\n\n/**\n * Ngrx store action to set a posts array.\n * It needs a Post array in a constructor parameter.\n */\nexport class SetPosts implements Action {\n\tpublic readonly type: string = SET_POSTS;\n\tconstructor(public payload: Post[]) { }\n}\n\n/**\n * Ngrx store action to update a post.\n * It needs a Post in a constructor parameter.\n */\nexport class UpdatePost implements Action {\n\tpublic readonly type: string = UPDATE_POST;\n\tconstructor(public payload: Post) { }\n}\n\n/**\n * Ngrx store action to update a post.\n * It needs a Post in a constructor parameter.\n */\nexport class UpdatePosts implements Action {\n\tpublic readonly type: string = UPDATE_POSTS;\n\tconstructor(public payload: Post[]) { }\n}\n\nexport type Actions = SetPosts | UpdatePost | UpdatePosts;\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/classes/constants.class.ts\n            \n            \n                variable\n            \n            \n                BASE_HREF\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/classes/constants.class.ts\n            \n            \n                variable\n            \n            \n                IMG_BASE_URL\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/thumbnail-post/thumbnail-post.component.ts\n            \n            \n                component\n            \n            \n                ThumbnailPostComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/functions/utils.functions.ts\n            \n            \n                function\n            \n            \n                clone\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/functions/utils.functions.ts\n            \n            \n                function\n            \n            \n                observable2promise\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/post.model.ts\n            \n            \n                interface\n            \n            \n                Post\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/seo.model.ts\n            \n            \n                interface\n            \n            \n                Seo\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/actions/posts.actions.ts\n            \n            \n                class\n            \n            \n                SetPosts\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/actions/posts.actions.ts\n            \n            \n                class\n            \n            \n                UpdatePost\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/actions/posts.actions.ts\n            \n            \n                class\n            \n            \n                UpdatePosts\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/actions/posts.actions.ts\n            \n            \n                variable\n            \n            \n                SET_POSTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/actions/posts.actions.ts\n            \n            \n                variable\n            \n            \n                UPDATE_POST\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/actions/posts.actions.ts\n            \n            \n                variable\n            \n            \n                UPDATE_POSTS\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/app-state.ts\n            \n            \n                interface\n            \n            \n                AppState\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/reducers/posts.reducer.ts\n            \n            \n                function\n            \n            \n                posts\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/reducers/posts.reducer.ts\n            \n            \n                function\n            \n            \n                updatePost\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/ngrx-store/reducers/posts.reducer.ts\n            \n            \n                function\n            \n            \n                updatePosts\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pages/about-me/about-me.component.ts\n            \n            \n                component\n            \n            \n                AboutMeComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/blog/blog.component.ts\n            \n            \n                component\n            \n            \n                BlogComponent\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/pages/page-not-found/page-not-found.component.ts\n            \n            \n                component\n            \n            \n                PageNotFoundComponent\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/pages/post/post.component.ts\n            \n            \n                component\n            \n            \n                PostComponent\n            \n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/pipes/capitalize/capitalize.pipe.ts\n            \n            \n                pipe\n            \n            \n                CapitalizePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/es-date/es-date.pipe.ts\n            \n            \n                pipe\n            \n            \n                EsDatePipe\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/about-me/about-me.service.ts\n            \n            \n                injectable\n            \n            \n                AboutMeService\n            \n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/services/base-http.service.ts\n            \n            \n                class\n            \n            \n                BaseHttpService\n            \n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/blog/blog.service.ts\n            \n            \n                injectable\n            \n            \n                BlogService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/services/seo/seo.service.ts\n            \n            \n                injectable\n            \n            \n                SeoService\n            \n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.1.1\n        \n            @angular/common : ~7.1.0\n        \n            @angular/compiler : ~7.1.0\n        \n            @angular/core : ~7.1.0\n        \n            @angular/forms : ~7.1.0\n        \n            @angular/platform-browser : ~7.1.0\n        \n            @angular/platform-browser-dynamic : ~7.1.0\n        \n            @angular/router : ~7.1.0\n        \n            @ngrx/store : ^6.1.2\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            jquery : ^3.3.1\n        \n            moment : ^2.22.2\n        \n            ngx-disqus : ^2.4.3\n        \n            ngx-markdown : ^7.0.2\n        \n            popper.js : ^1.14.6\n        \n            prismjs : ^1.15.0\n        \n            rxjs : ~6.3.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            clone   (src/.../utils.functions.ts)\n                        \n                        \n                            observable2promise   (src/.../utils.functions.ts)\n                        \n                        \n                            posts   (src/.../posts.reducer.ts)\n                        \n                        \n                            updatePost   (src/.../posts.reducer.ts)\n                        \n                        \n                            updatePosts   (src/.../posts.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/functions/utils.functions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            clone\n                            \n                            \n                        \n                    \n                \n                \n                    \nclone(input: any)\n                    \n                \n\n\n\n\n                \n                    \n                            Clone a JSON object and returns it clone.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (JSON object) to clone.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            observable2promise\n                            \n                            \n                        \n                    \n                \n                \n                    \nobservable2promise(observable)\n                    \n                \n\n\n\n\n                \n                    \n                            Pass an observable to promise.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        observable\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Observable) to pass to promise.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/ngrx-store/reducers/posts.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            posts\n                            \n                            \n                        \n                    \n                \n                \n                    \nposts(state, action)\n                    \n                \n\n\n\n\n                \n                    \n                            Posts reducer function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Post[]) old state value, it's read only.\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Actions) to do in this reducer.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePost\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePost(state, post)\n                    \n                \n\n\n\n\n                \n                    \n                            Update a post in state array.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Post[]) old state value.\n\n                                                        \n                                                \n                                                \n                                                        post\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Post) data to update.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatePosts\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdatePosts(state, posts)\n                    \n                \n\n\n\n\n                \n                    \n                            Update posts list content in current state.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Post[]) old state value.\n\n                                                        \n                                                \n                                                \n                                                        posts\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                (Post[]) data to update.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nIvánHdzD\nÉste repositorio conforma mi sitio web personal, en donde hablo un poco sobre quién soy y lo que me apasiona hacer, pueden ver esa info aquí.\nTambién cuenta con un blog sencillo en donde iré publicando posts acerca de programación (en su mayoría web), el blog se encuentra aquí.\nFinalmente cuenta con la sección Docs, que es la documentación generada por Compodoc de manera automática, pueden acceder a la documentación aquí.\nEstructura\nEste repositorio se compone de 3 ramas principales:\n\nmaster tiene dentro el código trasnpilado de Angular, e incluye dentro el directorio compodoc en donde se encuentra la documentación autogenerada.\ndevelop tiene el código fuente del sitio web.\ndocs tiene el directorio docs en donde se almacena el contenido de los posts.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Iván Hernández Durán\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NgrxStoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutMeComponent\n\nAboutMeComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutMeComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBlogComponent\n\nBlogComponent\n\nAppModule -->\n\nBlogComponent->AppModule\n\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\nAppModule -->\n\nCapitalizePipe->AppModule\n\n\n\n\n\nEsDatePipe\n\nEsDatePipe\n\nAppModule -->\n\nEsDatePipe->AppModule\n\n\n\n\n\nPageNotFoundComponent\n\nPageNotFoundComponent\n\nAppModule -->\n\nPageNotFoundComponent->AppModule\n\n\n\n\n\nPostComponent\n\nPostComponent\n\nAppModule -->\n\nPostComponent->AppModule\n\n\n\n\n\nThumbnailPostComponent\n\nThumbnailPostComponent\n\nAppModule -->\n\nThumbnailPostComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgrxStoreModule\n\nNgrxStoreModule\n\nAppModule -->\n\nNgrxStoreModule->AppModule\n\n\n\n\n\nAboutMeService\n\nAboutMeService\n\nAppModule -->\n\nAboutMeService->AppModule\n\n\n\n\n\nBlogService\n\nBlogService\n\nAppModule -->\n\nBlogService->AppModule\n\n\n\n\n\nSeoService\n\nSeoService\n\nAppModule -->\n\nSeoService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Actions   (src/.../posts.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/ngrx-store/actions/posts.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        Actions\n                    \n                \n                \n                    \n                        Actions:     SetPosts | UpdatePost | UpdatePosts\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_HREF   (src/.../constants.class.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            IMG_BASE_URL   (src/.../constants.class.ts)\n                        \n                        \n                            SET_POSTS   (src/.../posts.actions.ts)\n                        \n                        \n                            UPDATE_POST   (src/.../posts.actions.ts)\n                        \n                        \n                            UPDATE_POSTS   (src/.../posts.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/constants.class.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_HREF\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        BASE_HREF:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://ivanhdzd.github.io'\n                        \n                    \n\n                \n                    \n                        Base href URL \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IMG_BASE_URL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IMG_BASE_URL:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://github.com/ivanhdzd/ivanhdzd.github.io/raw/docs/docs'\n                        \n                    \n\n                \n                    \n                        Images base URL to use in each image HTML tag \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tproduction: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tproduction: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/ngrx-store/actions/posts.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SET_POSTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SET_POSTS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[POST] SET_POSTS'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_POST\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UPDATE_POST:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[POST] UPDATE_POST'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UPDATE_POSTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        UPDATE_POSTS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '[POST] UPDATE_POSTS'\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
